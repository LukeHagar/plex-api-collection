{
	"info": {
		"_postman_id": "ed91854f-86a4-4591-9dbb-3aadbac99fe5",
		"name": "Plex Media Server",
		"description": "An Open API Spec for interacting with Plex.tv and Plex Servers\n\nContact Support:\n Name: Luke Hagar\n Email: Lukeslakemail@gmail.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "19653982-ed91854f-86a4-4591-9dbb-3aadbac99fe5"
	},
	"item": [
		{
			"name": "Activities",
			"item": [
				{
					"name": "Get Server Activities",
					"id": "49fa7947-7010-4c55-acae-65a16b9161ff",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/activities",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activities"
							],
							"variable": [
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "Get Server Activities"
					},
					"response": [
						{
							"id": "dd8fdf5f-6938-4bfa-b0a4-ad236347525d",
							"name": "The Server Activities",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activities"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"MediaContainer\": {\n\t\t\"size\": 46649415.425509274,\n\t\t\"Activity\": [\n\t\t\t{\n\t\t\t\t\"uuid\": \"amet elit\",\n\t\t\t\t\"type\": \"sit labore Ut veniam mollit\",\n\t\t\t\t\"cancellable\": false,\n\t\t\t\t\"userID\": -38480596.4670075,\n\t\t\t\t\"title\": \"reprehenderit Excepteur dolor\",\n\t\t\t\t\"subtitle\": \"consequat\",\n\t\t\t\t\"progress\": 45863213.39258009,\n\t\t\t\t\"Context\": {\n\t\t\t\t\t\"librarySectionID\": \"elit\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"uuid\": \"ad dolor Lorem\",\n\t\t\t\t\"type\": \"exercitation minim quis sint\",\n\t\t\t\t\"cancellable\": true,\n\t\t\t\t\"userID\": 53559919.81305644,\n\t\t\t\t\"title\": \"sed exercitation\",\n\t\t\t\t\"subtitle\": \"dolore est voluptate\",\n\t\t\t\t\"progress\": 73442992.71055302,\n\t\t\t\t\"Context\": {\n\t\t\t\t\t\"librarySectionID\": \"commodo vo\"\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t}\n}"
						},
						{
							"id": "e69ba83a-9daf-4eac-88dc-4223ca68857f",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activities"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "8a9fd5a0-14d5-4b10-9cd0-04b3f62d93a1",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activities"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				},
				{
					"name": "Cancel Server Activities",
					"id": "b1a89c68-6c02-421e-a6d7-dcc09194f637",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/activities/:activityUUID",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"activities",
								":activityUUID"
							],
							"variable": [
								{
									"key": "activityUUID",
									"value": "25b71ed5-0f9d-461c-baa7-d404e9e10d3e",
									"description": "(Required) The UUID of the activity to cancel."
								},
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "Cancel Server Activities"
					},
					"response": [
						{
							"id": "5aa03a7b-927c-4a7e-8568-197c605acfe5",
							"name": "The Server Activity was canceled",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activities/:activityUUID",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activities",
										":activityUUID"
									],
									"variable": [
										{
											"key": "activityUUID",
											"value": "25b71ed5-0f9d-461c-baa7-d404e9e10d3e",
											"description": "(Required) The UUID of the activity to cancel."
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "b1d02c50-97d3-48b6-a65f-1e0dc0f87626",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activities/:activityUUID",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activities",
										":activityUUID"
									],
									"variable": [
										{
											"key": "activityUUID",
											"value": "25b71ed5-0f9d-461c-baa7-d404e9e10d3e",
											"description": "(Required) The UUID of the activity to cancel."
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "a16a7175-b0ab-4a00-bb7f-dd09be774fdb",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/activities/:activityUUID",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"activities",
										":activityUUID"
									],
									"variable": [
										{
											"key": "activityUUID",
											"value": "25b71ed5-0f9d-461c-baa7-d404e9e10d3e",
											"description": "(Required) The UUID of the activity to cancel."
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				}
			],
			"id": "0c6bb9ed-af8f-447c-945d-8cd0fd68e3f2",
			"description": "Activities are awesome. They provide a way to monitor and control asynchronous operations on the server. In order to receive real-time updates for activities, a client would normally subscribe via either EventSource or Websocket endpoints.\nActivities are associated with HTTP replies via a special `X-Plex-Activity` header which contains the UUID of the activity.\nActivities are optional cancellable. If cancellable, they may be cancelled via the `DELETE` endpoint. Other details:\n- They can contain a `progress` (from 0 to 100) marking the percent completion of the activity.\n- They must contain an `type` which is used by clients to distinguish the specific activity.\n- They may contain a `Context` object with attributes which associate the activity with various specific entities (items, libraries, etc.)\n- The may contain a `Response` object which attributes which represent the result of the asynchronous operation.\n"
		},
		{
			"name": "Authentication",
			"item": [],
			"id": "71cf412a-95a8-4ec3-995a-23e790c3294d",
			"description": "API Calls regarding authentication for Plex Media Server\n"
		},
		{
			"name": "Butler",
			"item": [
				{
					"name": "Get Butler tasks",
					"id": "32a815fc-568f-4b30-bed6-59e5a6bc9441",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/butler",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"butler"
							],
							"variable": [
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "Returns a list of butler tasks"
					},
					"response": [
						{
							"id": "62afd623-63f5-4dba-80ea-6960fa99c832",
							"name": "All butler tasks",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/butler",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"butler"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"ButlerTasks\": {\n\t\t\"ButlerTask\": [\n\t\t\t{\n\t\t\t\t\"name\": \"BackupDatabase\",\n\t\t\t\t\"interval\": 3,\n\t\t\t\t\"scheduleRandomized\": true,\n\t\t\t\t\"enabled\": true,\n\t\t\t\t\"title\": \"Backup Database\",\n\t\t\t\t\"description\": \"Create a backup copy of the server's database in the configured backup directory\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"BackupDatabase\",\n\t\t\t\t\"interval\": 3,\n\t\t\t\t\"scheduleRandomized\": true,\n\t\t\t\t\"enabled\": true,\n\t\t\t\t\"title\": \"Backup Database\",\n\t\t\t\t\"description\": \"Create a backup copy of the server's database in the configured backup directory\"\n\t\t\t}\n\t\t]\n\t}\n}"
						},
						{
							"id": "2da7d0f7-479c-4d09-80ff-ea7bc8afc4a4",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/butler",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"butler"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "ed43c332-2381-4dd4-a730-d5fae49e2c8b",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/butler",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"butler"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				},
				{
					"name": "Start all Butler tasks",
					"id": "b452e18d-0174-44b6-bcd7-dba57896506c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/butler",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"butler"
							],
							"variable": [
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "This endpoint will attempt to start all Butler tasks that are enabled in the settings. Butler tasks normally run automatically during a time window configured on the server's Settings page but can be manually started using this endpoint. Tasks will run with the following criteria:\n1. Any tasks not scheduled to run on the current day will be skipped.\n2. If a task is configured to run at a random time during the configured window and we are outside that window, the task will start immediately.\n3. If a task is configured to run at a random time during the configured window and we are within that window, the task will be scheduled at a random time within the window.\n4. If we are outside the configured window, the task will start immediately.\n"
					},
					"response": [
						{
							"id": "898da69d-4839-45c2-a95f-2045e1581236",
							"name": "All tasks were started",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/butler",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"butler"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "9ee9f6b3-1a73-4265-badf-ed37bfab1b18",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/butler",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"butler"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "550b576a-40d3-45b3-adb2-9edca618ff73",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/butler",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"butler"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				},
				{
					"name": "Stop all Butler tasks",
					"id": "f5c2496b-9015-4a7f-a0c5-7d691530d474",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/butler",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"butler"
							],
							"variable": [
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "This endpoint will stop all currently running tasks and remove any scheduled tasks from the queue.\n"
					},
					"response": [
						{
							"id": "499db6ba-6b1a-43c4-9dca-04fd6daa6cb9",
							"name": "All tasks were stopped",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/butler",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"butler"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "2adff25c-8546-43f1-8da1-8e04b3d3a2ca",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/butler",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"butler"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "b7155c7f-f602-4743-ba2f-873f4339746c",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/butler",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"butler"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				},
				{
					"name": "Start a single Butler task",
					"id": "e5accd8c-c542-46c4-8f01-99f136e7d1cb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/butler/:taskName",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"butler",
								":taskName"
							],
							"variable": [
								{
									"key": "taskName",
									"value": "RefreshPeriodicMetadata",
									"description": "(Required) the name of the task to be started."
								},
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "This endpoint will attempt to start a single Butler task that is enabled in the settings. Butler tasks normally run automatically during a time window configured on the server's Settings page but can be manually started using this endpoint. Tasks will run with the following criteria:\n1. Any tasks not scheduled to run on the current day will be skipped.\n2. If a task is configured to run at a random time during the configured window and we are outside that window, the task will start immediately.\n3. If a task is configured to run at a random time during the configured window and we are within that window, the task will be scheduled at a random time within the window.\n4. If we are outside the configured window, the task will start immediately.\n"
					},
					"response": [
						{
							"id": "96105f25-0563-47cf-9056-ce8111d4b62a",
							"name": "The task was started successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/butler/:taskName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"butler",
										":taskName"
									],
									"variable": [
										{
											"key": "taskName",
											"value": "RefreshPeriodicMetadata",
											"description": "(Required) the name of the task to be started."
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "b4619b8f-c6bd-4ea3-921d-cfbb5b36b31d",
							"name": "The task was already running.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/butler/:taskName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"butler",
										":taskName"
									],
									"variable": [
										{
											"key": "taskName",
											"value": "RefreshPeriodicMetadata",
											"description": "(Required) the name of the task to be started."
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "4e64429a-8162-4e1b-b651-0a570ce15779",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/butler/:taskName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"butler",
										":taskName"
									],
									"variable": [
										{
											"key": "taskName",
											"value": "RefreshPeriodicMetadata",
											"description": "(Required) the name of the task to be started."
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "17820c81-d39c-4902-ba71-62b4cd2c62b0",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/butler/:taskName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"butler",
										":taskName"
									],
									"variable": [
										{
											"key": "taskName",
											"value": "RefreshPeriodicMetadata",
											"description": "(Required) the name of the task to be started."
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				},
				{
					"name": "Stop a single Butler task",
					"id": "073b4481-318a-4fa9-9973-c4676db3f1b0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/butler/:taskName",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"butler",
								":taskName"
							],
							"variable": [
								{
									"key": "taskName",
									"value": "RefreshPeriodicMetadata",
									"description": "(Required) The name of the task to be started."
								},
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "This endpoint will stop a currently running task by name, or remove it from the list of scheduled tasks if it exists. See the section above for a list of task names for this endpoint.\n"
					},
					"response": [
						{
							"id": "9b43c003-52fb-4980-b638-d2ce0ddc9390",
							"name": "The task was stopped",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/butler/:taskName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"butler",
										":taskName"
									],
									"variable": [
										{
											"key": "taskName",
											"value": "RefreshPeriodicMetadata",
											"description": "(Required) The name of the task to be started."
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "ab708b38-f5d2-42dc-83ea-aaa254445797",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/butler/:taskName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"butler",
										":taskName"
									],
									"variable": [
										{
											"key": "taskName",
											"value": "RefreshPeriodicMetadata",
											"description": "(Required) The name of the task to be started."
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "fb3464ee-f483-4072-8ddd-5aa5a71763d1",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/butler/:taskName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"butler",
										":taskName"
									],
									"variable": [
										{
											"key": "taskName",
											"value": "RefreshPeriodicMetadata",
											"description": "(Required) The name of the task to be started."
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						},
						{
							"id": "e1351fce-97ef-4d9f-9e18-f5c09d43bf98",
							"name": "The task was not running",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/butler/:taskName",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"butler",
										":taskName"
									],
									"variable": [
										{
											"key": "taskName",
											"value": "RefreshPeriodicMetadata",
											"description": "(Required) The name of the task to be started."
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"id": "2fce5d45-982c-4a4d-9ce5-a15f67cf00c2",
			"description": "Butler is the task manager of the Plex Media Server Ecosystem.\n"
		},
		{
			"name": "Server",
			"item": [
				{
					"name": "Server Capabilities",
					"id": "3fec9081-1847-42fd-beb1-0a3766258887",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								""
							],
							"variable": [
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "Server Capabilities"
					},
					"response": [
						{
							"id": "1b09253d-b888-4526-ade1-70f8bf2d00ba",
							"name": "The Server Capabilities",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										""
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"MediaContainer\": {\n\t\t\"size\": 21741346.545197442,\n\t\t\"allowCameraUpload\": true,\n\t\t\"allowChannelAccess\": true,\n\t\t\"allowMediaDeletion\": true,\n\t\t\"allowSharing\": true,\n\t\t\"allowSync\": false,\n\t\t\"allowTuners\": true,\n\t\t\"backgroundProcessing\": false,\n\t\t\"certificate\": false,\n\t\t\"companionProxy\": false,\n\t\t\"countryCode\": \"ipsum culpa sit nostrud\",\n\t\t\"diagnostics\": \"in dolore ullamco\",\n\t\t\"eventStream\": true,\n\t\t\"friendlyName\": \"esse\",\n\t\t\"hubSearch\": false,\n\t\t\"itemClusters\": true,\n\t\t\"livetv\": 97358223.55637956,\n\t\t\"machineIdentifier\": \"ea\",\n\t\t\"mediaProviders\": true,\n\t\t\"multiuser\": false,\n\t\t\"musicAnalysis\": -52982590.98397118,\n\t\t\"myPlex\": true,\n\t\t\"myPlexMappingState\": \"do dolor tempor pariatur esse\",\n\t\t\"myPlexSigninState\": \"non Excepteur magna\",\n\t\t\"myPlexSubscription\": false,\n\t\t\"myPlexUsername\": \"quis Ut\",\n\t\t\"offlineTranscode\": 27224805.314353302,\n\t\t\"ownerFeatures\": \"fugiat aliquip ipsum dolore in\",\n\t\t\"photoAutoTag\": false,\n\t\t\"platform\": \"sunt irure cillum esse\",\n\t\t\"platformVersion\": \"et id culpa reprehenderit fugiat\",\n\t\t\"pluginHost\": true,\n\t\t\"pushNotifications\": false,\n\t\t\"readOnlyLibraries\": false,\n\t\t\"streamingBrainABRVersion\": 34859527.83775118,\n\t\t\"streamingBrainVersion\": -28370084.470796227,\n\t\t\"sync\": false,\n\t\t\"transcoderActiveVideoSessions\": 15559732.926295891,\n\t\t\"transcoderAudio\": false,\n\t\t\"transcoderLyrics\": true,\n\t\t\"transcoderPhoto\": true,\n\t\t\"transcoderSubtitles\": false,\n\t\t\"transcoderVideo\": true,\n\t\t\"transcoderVideoBitrates\": \"in officia minim Lorem\",\n\t\t\"transcoderVideoQualities\": \"cillum incididunt sit qui culpa\",\n\t\t\"transcoderVideoResolutions\": \"ad ullamco laboris nostrud\",\n\t\t\"updatedAt\": 46419065.82140359,\n\t\t\"updater\": true,\n\t\t\"version\": \"sint incididunt laborum ut\",\n\t\t\"voiceSearch\": false,\n\t\t\"Directory\": [\n\t\t\t{\n\t\t\t\t\"count\": -40040731.72034857,\n\t\t\t\t\"key\": \"aliqua\",\n\t\t\t\t\"title\": \"cillum magna in sunt\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"count\": 56146747.34188557,\n\t\t\t\t\"key\": \"ut fugiat anim\",\n\t\t\t\t\"title\": \"Lorem esse amet pariatur ut\"\n\t\t\t}\n\t\t]\n\t}\n}"
						},
						{
							"id": "b931b472-af9e-4586-a974-2b0ed0d7206e",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										""
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "ed43a372-d13a-4911-9f5f-18c2fcd911a0",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										""
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				},
				{
					"name": "Get Server Preferences",
					"id": "999c2b61-503e-45eb-9451-7858514f0d12",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/:/prefs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								":",
								"prefs"
							],
							"variable": [
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "Get Server Preferences"
					},
					"response": [
						{
							"id": "5a454ab6-fe6e-45ee-a7a4-112a54657d2e",
							"name": "Server Preferences",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/:/prefs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										":",
										"prefs"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "8e0a6141-e37c-41f1-993e-9e6e0c48598b",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/:/prefs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										":",
										"prefs"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "bd70341a-0da6-4af2-a829-5dfb92f99a46",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/:/prefs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										":",
										"prefs"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				},
				{
					"name": "Get Available Clients",
					"id": "dfaba716-f2f7-4d83-9474-c0ba1bfbf7f6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/clients",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"clients"
							],
							"variable": [
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "Get Available Clients"
					},
					"response": [
						{
							"id": "389fab19-adb3-402c-a660-ec169fbc5705",
							"name": "Available Clients",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/clients",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clients"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n\t{\n\t\t\"MediaContainer\": {\n\t\t\t\"size\": 1,\n\t\t\t\"Server\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"iPad\",\n\t\t\t\t\t\"host\": \"10.10.10.102\",\n\t\t\t\t\t\"address\": \"10.10.10.102\",\n\t\t\t\t\t\"port\": 32500,\n\t\t\t\t\t\"machineIdentifier\": \"A2E901F8-E016-43A7-ADFB-EF8CA8A4AC05\",\n\t\t\t\t\t\"version\": \"8.17\",\n\t\t\t\t\t\"protocol\": \"plex\",\n\t\t\t\t\t\"product\": \"Plex for iOS\",\n\t\t\t\t\t\"deviceClass\": \"tablet\",\n\t\t\t\t\t\"protocolVersion\": 2,\n\t\t\t\t\t\"protocolCapabilities\": \"playback,playqueues,timeline,provider-playback\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"iPad\",\n\t\t\t\t\t\"host\": \"10.10.10.102\",\n\t\t\t\t\t\"address\": \"10.10.10.102\",\n\t\t\t\t\t\"port\": 32500,\n\t\t\t\t\t\"machineIdentifier\": \"A2E901F8-E016-43A7-ADFB-EF8CA8A4AC05\",\n\t\t\t\t\t\"version\": \"8.17\",\n\t\t\t\t\t\"protocol\": \"plex\",\n\t\t\t\t\t\"product\": \"Plex for iOS\",\n\t\t\t\t\t\"deviceClass\": \"tablet\",\n\t\t\t\t\t\"protocolVersion\": 2,\n\t\t\t\t\t\"protocolCapabilities\": \"playback,playqueues,timeline,provider-playback\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t},\n\t{\n\t\t\"MediaContainer\": {\n\t\t\t\"size\": 1,\n\t\t\t\"Server\": [\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"iPad\",\n\t\t\t\t\t\"host\": \"10.10.10.102\",\n\t\t\t\t\t\"address\": \"10.10.10.102\",\n\t\t\t\t\t\"port\": 32500,\n\t\t\t\t\t\"machineIdentifier\": \"A2E901F8-E016-43A7-ADFB-EF8CA8A4AC05\",\n\t\t\t\t\t\"version\": \"8.17\",\n\t\t\t\t\t\"protocol\": \"plex\",\n\t\t\t\t\t\"product\": \"Plex for iOS\",\n\t\t\t\t\t\"deviceClass\": \"tablet\",\n\t\t\t\t\t\"protocolVersion\": 2,\n\t\t\t\t\t\"protocolCapabilities\": \"playback,playqueues,timeline,provider-playback\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"name\": \"iPad\",\n\t\t\t\t\t\"host\": \"10.10.10.102\",\n\t\t\t\t\t\"address\": \"10.10.10.102\",\n\t\t\t\t\t\"port\": 32500,\n\t\t\t\t\t\"machineIdentifier\": \"A2E901F8-E016-43A7-ADFB-EF8CA8A4AC05\",\n\t\t\t\t\t\"version\": \"8.17\",\n\t\t\t\t\t\"protocol\": \"plex\",\n\t\t\t\t\t\"product\": \"Plex for iOS\",\n\t\t\t\t\t\"deviceClass\": \"tablet\",\n\t\t\t\t\t\"protocolVersion\": 2,\n\t\t\t\t\t\"protocolCapabilities\": \"playback,playqueues,timeline,provider-playback\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t}\n]"
						},
						{
							"id": "564d73b6-7c1d-41fa-a162-0f43df600040",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/clients",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clients"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "bf0ce96f-801f-42f3-b237-10ee15cf9445",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/clients",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"clients"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				},
				{
					"name": "Get Devices",
					"id": "8a023f6d-d62c-4256-9c88-4ad06f473d65",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/devices",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"devices"
							],
							"variable": [
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "Get Devices"
					},
					"response": [
						{
							"id": "411278c5-728a-4895-88d2-291e1ea66fe2",
							"name": "Devices",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/devices",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"devices"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"MediaContainer\": {\n\t\t\"size\": 151,\n\t\t\"identifier\": \"com.plexapp.system.devices\",\n\t\t\"Device\": [\n\t\t\t{\n\t\t\t\t\"id\": 1,\n\t\t\t\t\"name\": \"iPhone\",\n\t\t\t\t\"platform\": \"iOS\",\n\t\t\t\t\"clientIdentifier\": \"culpa exercitation\",\n\t\t\t\t\"createdAt\": 1654131230\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"id\": 1,\n\t\t\t\t\"name\": \"iPhone\",\n\t\t\t\t\"platform\": \"iOS\",\n\t\t\t\t\"clientIdentifier\": \"laborum ea officia\",\n\t\t\t\t\"createdAt\": 1654131230\n\t\t\t}\n\t\t]\n\t}\n}"
						},
						{
							"id": "e8e7b0fd-0e84-473b-a0ce-ae39325b55dd",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/devices",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"devices"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "c3364373-548c-49b0-962c-c6e3cda5a662",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/devices",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"devices"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				},
				{
					"name": "Get Server Identity",
					"id": "be800120-63f1-4685-a31c-19eab5760e5f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/identity",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"identity"
							],
							"variable": [
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "Get Server Identity"
					},
					"response": [
						{
							"id": "62f2b25c-7e0b-45a3-b4d0-5130c29aabdf",
							"name": "The Transcode Sessions",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/identity",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identity"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"MediaContainer\": {\n\t\t\"size\": 0,\n\t\t\"claimed\": true,\n\t\t\"machineIdentifier\": \"96f2fe7a78c9dc1f16a16bedbe90f98149be16b4\",\n\t\t\"version\": \"1.31.3.6868-28fc46b27\"\n\t}\n}"
						},
						{
							"id": "57959e01-8a68-42fd-87db-ef33a76cfad1",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/identity",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identity"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "414656fd-4d38-4eda-99f4-66900f01365c",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/identity",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"identity"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				},
				{
					"name": "Get MyPlex Account",
					"id": "f2baeafe-d048-4f44-bab8-b3328c5b463a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/myplex/account",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"myplex",
								"account"
							],
							"variable": [
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "Returns MyPlex Account Information"
					},
					"response": [
						{
							"id": "fe3b12e0-eb64-4d61-ac99-3dfae23774f2",
							"name": "MyPlex Account",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/myplex/account",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"myplex",
										"account"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"MyPlex\": {\n\t\t\"authToken\": \"Z5v-PrNASDFpsaCi3CPK7\",\n\t\t\"username\": \"example.email@mail.com\",\n\t\t\"mappingState\": \"mapped\",\n\t\t\"mappingError\": \"dolore non Duis occaecat sunt\",\n\t\t\"signInState\": \"ok\",\n\t\t\"publicAddress\": \"140.20.68.140\",\n\t\t\"publicPort\": 32400,\n\t\t\"privateAddress\": \"10.10.10.47\",\n\t\t\"privatePort\": 32400,\n\t\t\"subscriptionFeatures\": \"federated-auth,hardware_transcoding,home,hwtranscode,item_clusters,kevin-bacon,livetv,loudness,lyrics,music-analysis,music_videos,pass,photo_autotags,photos-v5,photosV6-edit,photosV6-tv-albums,premium_music_metadata,radio,server-manager,session_bandwidth_restrictions,session_kick,shared-radio,sync,trailers,tuner-sharing,type-first,unsupportedtuners,webhooks\",\n\t\t\"subscriptionActive\": false,\n\t\t\"subscriptionState\": \"Active\"\n\t}\n}"
						},
						{
							"id": "ce2966bd-05f2-428d-beb4-c8d95c2da0bf",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/myplex/account",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"myplex",
										"account"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "5dc1ab5e-be79-4c86-82da-60df141cf924",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/myplex/account",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"myplex",
										"account"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				},
				{
					"name": "Get a Resized Photo",
					"id": "7dc933c4-bf09-4b11-b6bb-7c7ef51b216c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/photo/:/transcode?width=110&height=165&opacity=100&blur=0&minSize=1&upscale=1&url=/library/metadata/49564/thumb/1654258204",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"photo",
								":",
								"transcode"
							],
							"query": [
								{
									"key": "width",
									"value": "110",
									"description": "(Required) The width for the resized photo"
								},
								{
									"key": "height",
									"value": "165",
									"description": "(Required) The height for the resized photo"
								},
								{
									"key": "opacity",
									"value": "100",
									"description": "(Required) The opacity for the resized photo"
								},
								{
									"key": "blur",
									"value": "0",
									"description": "(Required) The width for the resized photo"
								},
								{
									"key": "minSize",
									"value": "1",
									"description": "(Required) images are always scaled proportionally. A value of '1' in minSize will make the smaller native dimension the dimension resized against."
								},
								{
									"key": "upscale",
									"value": "1",
									"description": "(Required) allow images to be resized beyond native dimensions."
								},
								{
									"key": "url",
									"value": "/library/metadata/49564/thumb/1654258204",
									"description": "(Required) path to image within Plex"
								}
							],
							"variable": [
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "Plex's Photo transcoder is used throughout the service to serve images at specified sizes.\n"
					},
					"response": [
						{
							"id": "23955416-4b61-444a-9d4c-9881a680e637",
							"name": "Resized Image",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/photo/:/transcode?width=110&height=165&opacity=100&blur=0&minSize=1&upscale=1&url=/library/metadata/49564/thumb/1654258204",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"photo",
										":",
										"transcode"
									],
									"query": [
										{
											"key": "width",
											"value": "110"
										},
										{
											"key": "height",
											"value": "165"
										},
										{
											"key": "opacity",
											"value": "100"
										},
										{
											"key": "blur",
											"value": "0"
										},
										{
											"key": "minSize",
											"value": "1"
										},
										{
											"key": "upscale",
											"value": "1"
										},
										{
											"key": "url",
											"value": "/library/metadata/49564/thumb/1654258204"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "62f2308d-a177-4c92-8408-cd8b28c636ad",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/photo/:/transcode?width=110&height=165&opacity=100&blur=0&minSize=1&upscale=1&url=/library/metadata/49564/thumb/1654258204",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"photo",
										":",
										"transcode"
									],
									"query": [
										{
											"key": "width",
											"value": "110"
										},
										{
											"key": "height",
											"value": "165"
										},
										{
											"key": "opacity",
											"value": "100"
										},
										{
											"key": "blur",
											"value": "0"
										},
										{
											"key": "minSize",
											"value": "1"
										},
										{
											"key": "upscale",
											"value": "1"
										},
										{
											"key": "url",
											"value": "/library/metadata/49564/thumb/1654258204"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "55adcdbf-99ff-44ff-b876-4f4523ff8de6",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/photo/:/transcode?width=110&height=165&opacity=100&blur=0&minSize=1&upscale=1&url=/library/metadata/49564/thumb/1654258204",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"photo",
										":",
										"transcode"
									],
									"query": [
										{
											"key": "width",
											"value": "110"
										},
										{
											"key": "height",
											"value": "165"
										},
										{
											"key": "opacity",
											"value": "100"
										},
										{
											"key": "blur",
											"value": "0"
										},
										{
											"key": "minSize",
											"value": "1"
										},
										{
											"key": "upscale",
											"value": "1"
										},
										{
											"key": "url",
											"value": "/library/metadata/49564/thumb/1654258204"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				},
				{
					"name": "Get Server List",
					"id": "a165685e-f824-422b-babc-b71deaf83ad7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/servers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"servers"
							],
							"variable": [
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "Get Server List"
					},
					"response": [
						{
							"id": "52ded19e-c1c3-4da8-9a3e-549b84b1cdc7",
							"name": "List of Servers",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/servers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"servers"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"MediaContainer\": {\n\t\t\"size\": 1,\n\t\t\"Server\": [\n\t\t\t{\n\t\t\t\t\"name\": \"Hera\",\n\t\t\t\t\"host\": \"10.10.10.47\",\n\t\t\t\t\"address\": \"10.10.10.47\",\n\t\t\t\t\"port\": 32400,\n\t\t\t\t\"machineIdentifier\": \"96f2fe7a78c9dc1f16a16bedbe90f98149be16b4\",\n\t\t\t\t\"version\": \"1.31.3.6868-28fc46b27\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"name\": \"Hera\",\n\t\t\t\t\"host\": \"10.10.10.47\",\n\t\t\t\t\"address\": \"10.10.10.47\",\n\t\t\t\t\"port\": 32400,\n\t\t\t\t\"machineIdentifier\": \"96f2fe7a78c9dc1f16a16bedbe90f98149be16b4\",\n\t\t\t\t\"version\": \"1.31.3.6868-28fc46b27\"\n\t\t\t}\n\t\t]\n\t}\n}"
						},
						{
							"id": "6c40fbf0-7b61-4ce2-95bd-2d57c80ccd62",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/servers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"servers"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "eff5a066-6fe0-4f86-83f1-fccbbfec473b",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/servers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"servers"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				}
			],
			"id": "674e2091-70c7-450c-bb35-56d9afa95116",
			"description": "Operations against the Plex Media Server System.\n"
		},
		{
			"name": "Updater",
			"item": [
				{
					"name": "Querying status of updates",
					"id": "cb419bca-6364-4915-a22e-37c4fd0e0a7d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/updater/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"updater",
								"status"
							],
							"variable": [
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "Querying status of updates"
					},
					"response": [
						{
							"id": "5d2cf800-a027-4e78-acca-035fd8064524",
							"name": "The Server Updates",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/updater/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"updater",
										"status"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "e9979650-e1dd-486d-8f64-97818edd1341",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/updater/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"updater",
										"status"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "e09db484-925b-48c8-a0cd-a837d03c83c3",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/updater/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"updater",
										"status"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				},
				{
					"name": "Checking for updates",
					"id": "870bf135-decb-4839-9192-e4c97e2b8ad4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/updater/check?download=56376229.61249834",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"updater",
								"check"
							],
							"query": [
								{
									"key": "download",
									"value": "56376229.61249834",
									"description": "Indicate that you want to start download any updates found."
								}
							],
							"variable": [
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "Checking for updates"
					},
					"response": [
						{
							"id": "88842dd7-f13d-4549-88ba-81ac3596f3b1",
							"name": "Untitled Example",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/updater/check?download=56376229.61249834",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"updater",
										"check"
									],
									"query": [
										{
											"key": "download",
											"value": "56376229.61249834"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "2cd5f786-d439-43d0-8e6e-11403fc2f192",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/updater/check?download=56376229.61249834",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"updater",
										"check"
									],
									"query": [
										{
											"key": "download",
											"value": "56376229.61249834"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "da7e278c-207a-4d9f-90c3-f441b50604ae",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/updater/check?download=56376229.61249834",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"updater",
										"check"
									],
									"query": [
										{
											"key": "download",
											"value": "56376229.61249834"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				},
				{
					"name": "Apply Updates",
					"id": "28e3ff11-e36f-4582-84ed-952d99b0c347",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/updater/apply?tonight=56376229.61249834&skip=56376229.61249834",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"updater",
								"apply"
							],
							"query": [
								{
									"key": "tonight",
									"value": "56376229.61249834",
									"description": "Indicate that you want the update to run during the next Butler execution. Omitting this or setting it to false indicates that the update should install"
								},
								{
									"key": "skip",
									"value": "56376229.61249834",
									"description": "Indicate that the latest version should be marked as skipped. The <Release> entry for this version will have the `state` set to `skipped`."
								}
							],
							"variable": [
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "Note that these two parameters are effectively mutually exclusive. The `tonight` parameter takes precedence and `skip` will be ignored if `tonight` is also passed\n"
					},
					"response": [
						{
							"id": "330f2195-c41a-428c-b630-7e3cac9226bf",
							"name": "If the update process started correctly",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/updater/apply?tonight=56376229.61249834&skip=56376229.61249834",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"updater",
										"apply"
									],
									"query": [
										{
											"key": "tonight",
											"value": "56376229.61249834"
										},
										{
											"key": "skip",
											"value": "56376229.61249834"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "03c02e2b-2569-410c-b0f3-86942e0f2c9f",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/updater/apply?tonight=56376229.61249834&skip=56376229.61249834",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"updater",
										"apply"
									],
									"query": [
										{
											"key": "tonight",
											"value": "56376229.61249834"
										},
										{
											"key": "skip",
											"value": "56376229.61249834"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "f63eee04-585e-44bc-b5fa-f452a2c3cf37",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/updater/apply?tonight=56376229.61249834&skip=56376229.61249834",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"updater",
										"apply"
									],
									"query": [
										{
											"key": "tonight",
											"value": "56376229.61249834"
										},
										{
											"key": "skip",
											"value": "56376229.61249834"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						},
						{
							"id": "1f140b46-8802-441e-83c6-9cfb85a5f859",
							"name": "If the update process failed to start",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/updater/apply?tonight=56376229.61249834&skip=56376229.61249834",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"updater",
										"apply"
									],
									"query": [
										{
											"key": "tonight",
											"value": "56376229.61249834"
										},
										{
											"key": "skip",
											"value": "56376229.61249834"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"id": "f50b4f95-bf33-42db-9f51-f1fb72c8f108",
			"description": "This describes the API for searching and applying updates to the Plex Media Server.\nUpdates to the status can be observed via the Event API.\n"
		},
		{
			"name": "Log",
			"item": [
				{
					"name": "Logging a single line message.",
					"id": "245c932d-0da6-45ba-8e95-237c4be1a498",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/log?level=4&message=&source=",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"log"
							],
							"query": [
								{
									"key": "level",
									"value": "4",
									"description": "(Required) An integer log level to write to the PMS log with.  \n0: Error  \n1: Warning  \n2: Info \n3: Debug  \n4: Verbose\n"
								},
								{
									"key": "message",
									"value": "",
									"description": "(Required) The text of the message to write to the log."
								},
								{
									"key": "source",
									"value": "",
									"description": "(Required) a string indicating the source of the message."
								}
							],
							"variable": [
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "This endpoint will write a single-line log message, including a level and source to the main Plex Media Server log.\n"
					},
					"response": [
						{
							"id": "c5219158-4a4b-444e-a7d2-5ccdcd093544",
							"name": "Log Line submitted successfully",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/log?level=4&message=&source=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"log"
									],
									"query": [
										{
											"key": "level",
											"value": "4"
										},
										{
											"key": "message",
											"value": ""
										},
										{
											"key": "source",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "67fabc92-bd40-414f-883f-803f03c58665",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/log?level=4&message=&source=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"log"
									],
									"query": [
										{
											"key": "level",
											"value": "4"
										},
										{
											"key": "message",
											"value": ""
										},
										{
											"key": "source",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "ba50e72f-1e62-42ee-89fa-b661753ed812",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/log?level=4&message=&source=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"log"
									],
									"query": [
										{
											"key": "level",
											"value": "4"
										},
										{
											"key": "message",
											"value": ""
										},
										{
											"key": "source",
											"value": ""
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				},
				{
					"name": "Logging a multi-line message",
					"id": "fbe3b36d-b337-4a89-808e-bfbac1a1467a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/log",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"log"
							],
							"variable": [
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "This endpoint will write multiple lines to the main Plex Media Server log in a single request. It takes a set of query strings as would normally sent to the above GET endpoint as a linefeed-separated block of POST data. The parameters for each query string match as above.\n"
					},
					"response": [
						{
							"id": "b713e1c5-c1c4-4881-935a-c20059c06014",
							"name": "Multi-Line Log Message Posted successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/log",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"log"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "09c53805-ce81-49bd-948f-5584b1867289",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/log",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"log"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "10956832-0f64-4948-9c97-ab7af19a6add",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/log",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"log"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				},
				{
					"name": "Enabling Papertrail",
					"id": "2e918ff5-ed3a-4b45-abde-71693864bd22",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/log/networked",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"log",
								"networked"
							],
							"variable": [
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "This endpoint will enable all Plex Media Serverlogs to be sent to the Papertrail networked logging site for a period of time.\n"
					},
					"response": [
						{
							"id": "f4deee7c-b933-4ede-a360-50b2e9e41680",
							"name": "Papertrail enabled successfully",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/log/networked",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"log",
										"networked"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "9e8ec9c1-2c93-4920-a83c-85c2c767be65",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/log/networked",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"log",
										"networked"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "81f95c6a-0919-4508-a95d-1115114add11",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/log/networked",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"log",
										"networked"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						},
						{
							"id": "3ac69412-d8c1-417b-a58b-b86c0f4892be",
							"name": "the user was not signed in",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/log/networked",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"log",
										"networked"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"id": "a6d79725-98ac-4b08-90b3-c68b4c7f7afc",
			"description": "Submit logs to the Log Handler for Plex Media Server\n"
		},
		{
			"name": "Security",
			"item": [
				{
					"name": "Get a Transient Token.",
					"id": "f7a93aca-0f64-4cc6-8afc-691ce665b406",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/security/token?type=delegation&scope=all",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"security",
								"token"
							],
							"query": [
								{
									"key": "type",
									"value": "delegation",
									"description": "(Required) `delegation` - This is the only supported `type` parameter."
								},
								{
									"key": "scope",
									"value": "all",
									"description": "(Required) `all` - This is the only supported `scope` parameter."
								}
							],
							"variable": [
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "This endpoint provides the caller with a temporary token with the same access level as the caller's token. These tokens are valid for up to 48 hours and are destroyed if the server instance is restarted.\n"
					},
					"response": [
						{
							"id": "da70a0b7-6114-439d-9513-da27a4d2aa8d",
							"name": "A Transient Token",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/security/token?type=delegation&scope=all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"security",
										"token"
									],
									"query": [
										{
											"key": "type",
											"value": "delegation"
										},
										{
											"key": "scope",
											"value": "all"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "8242752d-037f-45fd-bcf2-15c92b2718a8",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/security/token?type=delegation&scope=all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"security",
										"token"
									],
									"query": [
										{
											"key": "type",
											"value": "delegation"
										},
										{
											"key": "scope",
											"value": "all"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "a672e20f-e050-42b2-8bb3-5bf103224eeb",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/security/token?type=delegation&scope=all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"security",
										"token"
									],
									"query": [
										{
											"key": "type",
											"value": "delegation"
										},
										{
											"key": "scope",
											"value": "all"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				},
				{
					"name": "Get Source Connection Information",
					"id": "0336e73b-8042-4731-9d6a-19bb3e2724a0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/security/resources?source=server://client-identifier",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"security",
								"resources"
							],
							"query": [
								{
									"key": "source",
									"value": "server://client-identifier",
									"description": "(Required) The source identifier with an included prefix."
								}
							],
							"variable": [
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "If a caller requires connection details and a transient token for a source that is known to the server, for example a cloud media provider or shared PMS, then this endpoint can be called. This endpoint is only accessible with either an admin token or a valid transient token generated from an admin token.\nNote: requires Plex Media Server >= 1.15.4.\n"
					},
					"response": [
						{
							"id": "24be0d91-b45d-48cc-a64c-49a87c6aa6e5",
							"name": "Source Connection Information",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/security/resources?source=server://client-identifier",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"security",
										"resources"
									],
									"query": [
										{
											"key": "source",
											"value": "server://client-identifier"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "e6a3efbd-5b9d-4602-baae-fd394aafa755",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/security/resources?source=server://client-identifier",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"security",
										"resources"
									],
									"query": [
										{
											"key": "source",
											"value": "server://client-identifier"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "7806dfe8-45fa-48b6-8c41-cfaaa30d3e37",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/security/resources?source=server://client-identifier",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"security",
										"resources"
									],
									"query": [
										{
											"key": "source",
											"value": "server://client-identifier"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				}
			],
			"id": "a1bab4f9-b62b-4694-a681-07f43ea1428c",
			"description": "API Calls against Security for Plex Media Server\n"
		},
		{
			"name": "Library",
			"item": [
				{
					"name": "Get Hash Value",
					"id": "dc97de6a-4c6c-40fe-b135-0ee9bc6908be",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/library/hashes?url=file://C:\\Image.png%26type=13&type=40990660.07302156",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"library",
								"hashes"
							],
							"query": [
								{
									"key": "url",
									"value": "file://C:\\Image.png&type=13",
									"description": "(Required) This is the path to the local file, must be prefixed by `file://`"
								},
								{
									"key": "type",
									"value": "40990660.07302156",
									"description": "Item type"
								}
							],
							"variable": [
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "This resource returns hash values for local files"
					},
					"response": [
						{
							"id": "78b06175-e452-4015-9b04-d54d9d3f937d",
							"name": "The hash of the file",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/library/hashes?url=file://C:\\Image.png&type=13&type=40990660.07302156",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"library",
										"hashes"
									],
									"query": [
										{
											"key": "url",
											"value": "file://C:\\Image.png"
										},
										{
											"key": "type",
											"value": "13"
										},
										{
											"key": "type",
											"value": "40990660.07302156"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "29314c14-5cf1-4a18-826e-90139802ed50",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/library/hashes?url=file://C:\\Image.png&type=13&type=40990660.07302156",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"library",
										"hashes"
									],
									"query": [
										{
											"key": "url",
											"value": "file://C:\\Image.png"
										},
										{
											"key": "type",
											"value": "13"
										},
										{
											"key": "type",
											"value": "40990660.07302156"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "0f44cf98-563d-4d83-8910-719dc632cbec",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/library/hashes?url=file://C:\\Image.png&type=13&type=40990660.07302156",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"library",
										"hashes"
									],
									"query": [
										{
											"key": "url",
											"value": "file://C:\\Image.png"
										},
										{
											"key": "type",
											"value": "13"
										},
										{
											"key": "type",
											"value": "40990660.07302156"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				},
				{
					"name": "Get Recently Added",
					"id": "5a3e25e8-d4fd-47b4-a030-06d813375927",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/library/recentlyAdded",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"library",
								"recentlyAdded"
							],
							"variable": [
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "This endpoint will return the recently added content.\n"
					},
					"response": [
						{
							"id": "372b4d49-7b64-4bae-9a69-218be3b1b573",
							"name": "The recently added content",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/library/recentlyAdded",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"library",
										"recentlyAdded"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"MediaContainer\": {\n\t\t\"size\": 50,\n\t\t\"allowSync\": true,\n\t\t\"identifier\": \"com.plexapp.plugins.library\",\n\t\t\"mediaTagPrefix\": \"/system/bundle/media/flags/\",\n\t\t\"mediaTagVersion\": 1680021154,\n\t\t\"mixedParents\": false,\n\t\t\"Metadata\": [\n\t\t\t{\n\t\t\t\t\"allowSync\": false,\n\t\t\t\t\"librarySectionID\": 1,\n\t\t\t\t\"librarySectionTitle\": \"Movies\",\n\t\t\t\t\"librarySectionUUID\": \"322a231a-b7f7-49f5-920f-14c61199cd30\",\n\t\t\t\t\"ratingKey\": 59398,\n\t\t\t\t\"key\": \"/library/metadata/59398\",\n\t\t\t\t\"guid\": \"plex://movie/5e161a83bea6ac004126e148\",\n\t\t\t\t\"studio\": \"Marvel Studios\",\n\t\t\t\t\"type\": \"movie\",\n\t\t\t\t\"title\": \"Ant-Man and the Wasp: Quantumania\",\n\t\t\t\t\"contentRating\": \"PG-13\",\n\t\t\t\t\"summary\": \"Scott Lang and Hope Van Dyne along with Hank Pym and Janet Van Dyne explore the Quantum Realm where they interact with strange creatures and embark on an adventure that goes beyond the limits of what they thought was possible.\",\n\t\t\t\t\"rating\": 4.7,\n\t\t\t\t\"audienceRating\": 8.3,\n\t\t\t\t\"year\": 2023,\n\t\t\t\t\"tagline\": \"Witness the beginning of a new dynasty.\",\n\t\t\t\t\"thumb\": \"/library/metadata/59398/thumb/1681888010\",\n\t\t\t\t\"art\": \"/library/metadata/59398/art/1681888010\",\n\t\t\t\t\"duration\": 7474422,\n\t\t\t\t\"originallyAvailableAt\": \"1983-04-01\",\n\t\t\t\t\"addedAt\": 1681803215,\n\t\t\t\t\"updatedAt\": 1681888010,\n\t\t\t\t\"audienceRatingImage\": \"rottentomatoes://image.rating.upright\",\n\t\t\t\t\"chapterSource\": \"media\",\n\t\t\t\t\"primaryExtraKey\": \"/library/metadata/59399\",\n\t\t\t\t\"ratingImage\": \"rottentomatoes://image.rating.rotten\",\n\t\t\t\t\"Media\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"id\": 120345,\n\t\t\t\t\t\t\"duration\": 7474422,\n\t\t\t\t\t\t\"bitrate\": 3623,\n\t\t\t\t\t\t\"width\": 1920,\n\t\t\t\t\t\t\"height\": 804,\n\t\t\t\t\t\t\"aspectRatio\": 2.35,\n\t\t\t\t\t\t\"audioChannels\": 6,\n\t\t\t\t\t\t\"audioCodec\": \"ac3\",\n\t\t\t\t\t\t\"videoCodec\": \"h264\",\n\t\t\t\t\t\t\"videoResolution\": 1080,\n\t\t\t\t\t\t\"container\": \"mp4\",\n\t\t\t\t\t\t\"videoFrameRate\": \"24p\",\n\t\t\t\t\t\t\"optimizedForStreaming\": 0,\n\t\t\t\t\t\t\"has64bitOffsets\": false,\n\t\t\t\t\t\t\"videoProfile\": \"high\",\n\t\t\t\t\t\t\"Part\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"id\": 120353,\n\t\t\t\t\t\t\t\t\"key\": \"/library/parts/120353/1681803203/file.mp4\",\n\t\t\t\t\t\t\t\t\"duration\": 7474422,\n\t\t\t\t\t\t\t\t\"file\": \"/movies/Ant-Man and the Wasp Quantumania (2023)/Ant-Man.and.the.Wasp.Quantumania.2023.1080p.mp4\",\n\t\t\t\t\t\t\t\t\"size\": 3395307162,\n\t\t\t\t\t\t\t\t\"container\": \"mp4\",\n\t\t\t\t\t\t\t\t\"has64bitOffsets\": false,\n\t\t\t\t\t\t\t\t\"hasThumbnail\": 1,\n\t\t\t\t\t\t\t\t\"optimizedForStreaming\": true,\n\t\t\t\t\t\t\t\t\"videoProfile\": \"high\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"id\": 120353,\n\t\t\t\t\t\t\t\t\"key\": \"/library/parts/120353/1681803203/file.mp4\",\n\t\t\t\t\t\t\t\t\"duration\": 7474422,\n\t\t\t\t\t\t\t\t\"file\": \"/movies/Ant-Man and the Wasp Quantumania (2023)/Ant-Man.and.the.Wasp.Quantumania.2023.1080p.mp4\",\n\t\t\t\t\t\t\t\t\"size\": 3395307162,\n\t\t\t\t\t\t\t\t\"container\": \"mp4\",\n\t\t\t\t\t\t\t\t\"has64bitOffsets\": false,\n\t\t\t\t\t\t\t\t\"hasThumbnail\": 1,\n\t\t\t\t\t\t\t\t\"optimizedForStreaming\": true,\n\t\t\t\t\t\t\t\t\"videoProfile\": \"high\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"id\": 120345,\n\t\t\t\t\t\t\"duration\": 7474422,\n\t\t\t\t\t\t\"bitrate\": 3623,\n\t\t\t\t\t\t\"width\": 1920,\n\t\t\t\t\t\t\"height\": 804,\n\t\t\t\t\t\t\"aspectRatio\": 2.35,\n\t\t\t\t\t\t\"audioChannels\": 6,\n\t\t\t\t\t\t\"audioCodec\": \"ac3\",\n\t\t\t\t\t\t\"videoCodec\": \"h264\",\n\t\t\t\t\t\t\"videoResolution\": 1080,\n\t\t\t\t\t\t\"container\": \"mp4\",\n\t\t\t\t\t\t\"videoFrameRate\": \"24p\",\n\t\t\t\t\t\t\"optimizedForStreaming\": 0,\n\t\t\t\t\t\t\"has64bitOffsets\": true,\n\t\t\t\t\t\t\"videoProfile\": \"high\",\n\t\t\t\t\t\t\"Part\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"id\": 120353,\n\t\t\t\t\t\t\t\t\"key\": \"/library/parts/120353/1681803203/file.mp4\",\n\t\t\t\t\t\t\t\t\"duration\": 7474422,\n\t\t\t\t\t\t\t\t\"file\": \"/movies/Ant-Man and the Wasp Quantumania (2023)/Ant-Man.and.the.Wasp.Quantumania.2023.1080p.mp4\",\n\t\t\t\t\t\t\t\t\"size\": 3395307162,\n\t\t\t\t\t\t\t\t\"container\": \"mp4\",\n\t\t\t\t\t\t\t\t\"has64bitOffsets\": false,\n\t\t\t\t\t\t\t\t\"hasThumbnail\": 1,\n\t\t\t\t\t\t\t\t\"optimizedForStreaming\": false,\n\t\t\t\t\t\t\t\t\"videoProfile\": \"high\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"id\": 120353,\n\t\t\t\t\t\t\t\t\"key\": \"/library/parts/120353/1681803203/file.mp4\",\n\t\t\t\t\t\t\t\t\"duration\": 7474422,\n\t\t\t\t\t\t\t\t\"file\": \"/movies/Ant-Man and the Wasp Quantumania (2023)/Ant-Man.and.the.Wasp.Quantumania.2023.1080p.mp4\",\n\t\t\t\t\t\t\t\t\"size\": 3395307162,\n\t\t\t\t\t\t\t\t\"container\": \"mp4\",\n\t\t\t\t\t\t\t\t\"has64bitOffsets\": true,\n\t\t\t\t\t\t\t\t\"hasThumbnail\": 1,\n\t\t\t\t\t\t\t\t\"optimizedForStreaming\": true,\n\t\t\t\t\t\t\t\t\"videoProfile\": \"high\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"Genre\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"tag\": \"Comedy\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"tag\": \"Comedy\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"Director\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"tag\": \"Peyton Reed\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"tag\": \"Peyton Reed\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"Writer\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"tag\": \"Jeff Loveness\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"tag\": \"Jeff Loveness\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"Country\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"tag\": \"United States of America\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"tag\": \"United States of America\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"Role\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"tag\": \"Paul Rudd\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"tag\": \"Paul Rudd\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"allowSync\": true,\n\t\t\t\t\"librarySectionID\": 1,\n\t\t\t\t\"librarySectionTitle\": \"Movies\",\n\t\t\t\t\"librarySectionUUID\": \"322a231a-b7f7-49f5-920f-14c61199cd30\",\n\t\t\t\t\"ratingKey\": 59398,\n\t\t\t\t\"key\": \"/library/metadata/59398\",\n\t\t\t\t\"guid\": \"plex://movie/5e161a83bea6ac004126e148\",\n\t\t\t\t\"studio\": \"Marvel Studios\",\n\t\t\t\t\"type\": \"movie\",\n\t\t\t\t\"title\": \"Ant-Man and the Wasp: Quantumania\",\n\t\t\t\t\"contentRating\": \"PG-13\",\n\t\t\t\t\"summary\": \"Scott Lang and Hope Van Dyne along with Hank Pym and Janet Van Dyne explore the Quantum Realm where they interact with strange creatures and embark on an adventure that goes beyond the limits of what they thought was possible.\",\n\t\t\t\t\"rating\": 4.7,\n\t\t\t\t\"audienceRating\": 8.3,\n\t\t\t\t\"year\": 2023,\n\t\t\t\t\"tagline\": \"Witness the beginning of a new dynasty.\",\n\t\t\t\t\"thumb\": \"/library/metadata/59398/thumb/1681888010\",\n\t\t\t\t\"art\": \"/library/metadata/59398/art/1681888010\",\n\t\t\t\t\"duration\": 7474422,\n\t\t\t\t\"originallyAvailableAt\": \"1972-04-20\",\n\t\t\t\t\"addedAt\": 1681803215,\n\t\t\t\t\"updatedAt\": 1681888010,\n\t\t\t\t\"audienceRatingImage\": \"rottentomatoes://image.rating.upright\",\n\t\t\t\t\"chapterSource\": \"media\",\n\t\t\t\t\"primaryExtraKey\": \"/library/metadata/59399\",\n\t\t\t\t\"ratingImage\": \"rottentomatoes://image.rating.rotten\",\n\t\t\t\t\"Media\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"id\": 120345,\n\t\t\t\t\t\t\"duration\": 7474422,\n\t\t\t\t\t\t\"bitrate\": 3623,\n\t\t\t\t\t\t\"width\": 1920,\n\t\t\t\t\t\t\"height\": 804,\n\t\t\t\t\t\t\"aspectRatio\": 2.35,\n\t\t\t\t\t\t\"audioChannels\": 6,\n\t\t\t\t\t\t\"audioCodec\": \"ac3\",\n\t\t\t\t\t\t\"videoCodec\": \"h264\",\n\t\t\t\t\t\t\"videoResolution\": 1080,\n\t\t\t\t\t\t\"container\": \"mp4\",\n\t\t\t\t\t\t\"videoFrameRate\": \"24p\",\n\t\t\t\t\t\t\"optimizedForStreaming\": 0,\n\t\t\t\t\t\t\"has64bitOffsets\": true,\n\t\t\t\t\t\t\"videoProfile\": \"high\",\n\t\t\t\t\t\t\"Part\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"id\": 120353,\n\t\t\t\t\t\t\t\t\"key\": \"/library/parts/120353/1681803203/file.mp4\",\n\t\t\t\t\t\t\t\t\"duration\": 7474422,\n\t\t\t\t\t\t\t\t\"file\": \"/movies/Ant-Man and the Wasp Quantumania (2023)/Ant-Man.and.the.Wasp.Quantumania.2023.1080p.mp4\",\n\t\t\t\t\t\t\t\t\"size\": 3395307162,\n\t\t\t\t\t\t\t\t\"container\": \"mp4\",\n\t\t\t\t\t\t\t\t\"has64bitOffsets\": true,\n\t\t\t\t\t\t\t\t\"hasThumbnail\": 1,\n\t\t\t\t\t\t\t\t\"optimizedForStreaming\": false,\n\t\t\t\t\t\t\t\t\"videoProfile\": \"high\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"id\": 120353,\n\t\t\t\t\t\t\t\t\"key\": \"/library/parts/120353/1681803203/file.mp4\",\n\t\t\t\t\t\t\t\t\"duration\": 7474422,\n\t\t\t\t\t\t\t\t\"file\": \"/movies/Ant-Man and the Wasp Quantumania (2023)/Ant-Man.and.the.Wasp.Quantumania.2023.1080p.mp4\",\n\t\t\t\t\t\t\t\t\"size\": 3395307162,\n\t\t\t\t\t\t\t\t\"container\": \"mp4\",\n\t\t\t\t\t\t\t\t\"has64bitOffsets\": false,\n\t\t\t\t\t\t\t\t\"hasThumbnail\": 1,\n\t\t\t\t\t\t\t\t\"optimizedForStreaming\": false,\n\t\t\t\t\t\t\t\t\"videoProfile\": \"high\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"id\": 120345,\n\t\t\t\t\t\t\"duration\": 7474422,\n\t\t\t\t\t\t\"bitrate\": 3623,\n\t\t\t\t\t\t\"width\": 1920,\n\t\t\t\t\t\t\"height\": 804,\n\t\t\t\t\t\t\"aspectRatio\": 2.35,\n\t\t\t\t\t\t\"audioChannels\": 6,\n\t\t\t\t\t\t\"audioCodec\": \"ac3\",\n\t\t\t\t\t\t\"videoCodec\": \"h264\",\n\t\t\t\t\t\t\"videoResolution\": 1080,\n\t\t\t\t\t\t\"container\": \"mp4\",\n\t\t\t\t\t\t\"videoFrameRate\": \"24p\",\n\t\t\t\t\t\t\"optimizedForStreaming\": 0,\n\t\t\t\t\t\t\"has64bitOffsets\": true,\n\t\t\t\t\t\t\"videoProfile\": \"high\",\n\t\t\t\t\t\t\"Part\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"id\": 120353,\n\t\t\t\t\t\t\t\t\"key\": \"/library/parts/120353/1681803203/file.mp4\",\n\t\t\t\t\t\t\t\t\"duration\": 7474422,\n\t\t\t\t\t\t\t\t\"file\": \"/movies/Ant-Man and the Wasp Quantumania (2023)/Ant-Man.and.the.Wasp.Quantumania.2023.1080p.mp4\",\n\t\t\t\t\t\t\t\t\"size\": 3395307162,\n\t\t\t\t\t\t\t\t\"container\": \"mp4\",\n\t\t\t\t\t\t\t\t\"has64bitOffsets\": true,\n\t\t\t\t\t\t\t\t\"hasThumbnail\": 1,\n\t\t\t\t\t\t\t\t\"optimizedForStreaming\": true,\n\t\t\t\t\t\t\t\t\"videoProfile\": \"high\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"id\": 120353,\n\t\t\t\t\t\t\t\t\"key\": \"/library/parts/120353/1681803203/file.mp4\",\n\t\t\t\t\t\t\t\t\"duration\": 7474422,\n\t\t\t\t\t\t\t\t\"file\": \"/movies/Ant-Man and the Wasp Quantumania (2023)/Ant-Man.and.the.Wasp.Quantumania.2023.1080p.mp4\",\n\t\t\t\t\t\t\t\t\"size\": 3395307162,\n\t\t\t\t\t\t\t\t\"container\": \"mp4\",\n\t\t\t\t\t\t\t\t\"has64bitOffsets\": true,\n\t\t\t\t\t\t\t\t\"hasThumbnail\": 1,\n\t\t\t\t\t\t\t\t\"optimizedForStreaming\": true,\n\t\t\t\t\t\t\t\t\"videoProfile\": \"high\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"Genre\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"tag\": \"Comedy\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"tag\": \"Comedy\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"Director\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"tag\": \"Peyton Reed\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"tag\": \"Peyton Reed\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"Writer\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"tag\": \"Jeff Loveness\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"tag\": \"Jeff Loveness\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"Country\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"tag\": \"United States of America\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"tag\": \"United States of America\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"Role\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"tag\": \"Paul Rudd\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"tag\": \"Paul Rudd\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t}\n}"
						},
						{
							"id": "3216bddd-f3c8-4194-9864-f8da20308025",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/library/recentlyAdded",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"library",
										"recentlyAdded"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "2d091324-9918-49bc-aa24-9fec08606040",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/library/recentlyAdded",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"library",
										"recentlyAdded"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				},
				{
					"name": "Get All Libraries",
					"id": "3a9a7147-e041-46f5-b499-6b07b848aee5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/library/sections",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"library",
								"sections"
							],
							"variable": [
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "A library section (commonly referred to as just a library) is a collection of media. \nLibraries are typed, and depending on their type provide either a flat or a hierarchical view of the media. \nFor example, a music library has an artist > albums > tracks structure, whereas a movie library is flat.\n\nLibraries have features beyond just being a collection of media; for starters, they include information about supported types, filters and sorts. \nThis allows a client to provide a rich interface around the media (e.g. allow sorting movies by release year).\n"
					},
					"response": [
						{
							"id": "7c989b91-8878-46d0-8505-67e019b4de5c",
							"name": "The libraries available on the Server",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/library/sections",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"library",
										"sections"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "66b110d5-c626-467f-8dc4-c954dfb14faa",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/library/sections",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"library",
										"sections"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "791f97c1-2b1e-4680-b3fa-7f885d0068b4",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/library/sections",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"library",
										"sections"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				},
				{
					"name": "Get Library Details",
					"id": "cbb454cf-10de-44ec-9043-4f7cbf699569",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/library/sections/:sectionId?includeDetails=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"library",
								"sections",
								":sectionId"
							],
							"query": [
								{
									"key": "includeDetails",
									"value": "0",
									"description": "Whether or not to include details for a section (types, filters, and sorts). \nOnly exists for backwards compatibility, media providers other than the server libraries have it on always.\n"
								}
							],
							"variable": [
								{
									"key": "sectionId",
									"value": "1000",
									"description": "(Required) the Id of the library to query"
								},
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "Returns details for the library. This can be thought of as an interstitial endpoint because it contains information about the library, rather than content itself. These details are:\n\n- A list of `Directory` objects: These used to be used by clients to build a menuing system. There are four flavors of directory found here:\n  - Primary: (e.g. all, On Deck) These are still used in some clients to provide \"shortcuts\" to subsets of media. However, with the exception of On Deck, all of them can be created by media queries, and the desire is to allow these to be customized by users.\n  - Secondary: These are marked with `secondary=\"1\"` and were used by old clients to provide nested menus allowing for primative (but structured) navigation.\n  - Special: There is a By Folder entry which allows browsing the media by the underlying filesystem structure, and there's a completely obsolete entry marked `search=\"1\"` which used to be used to allow clients to build search dialogs on the fly.\n- A list of `Type` objects: These represent the types of things found in this library, and for each one, a list of `Filter` and `Sort` objects. These can be used to build rich controls around a grid of media to allow filtering and organizing. Note that these filters and sorts are optional, and without them, the client won't render any filtering controls. The `Type` object contains:\n  - `key`: This provides the root endpoint returning the actual media list for the type.\n  - `type`: This is the metadata type for the type (if a standard Plex type).\n  - `title`: The title for for the content of this type (e.g. \"Movies\").\n- Each `Filter` object contains a description of the filter. Note that it is not an exhaustive list of the full media query language, but an inportant subset useful for top-level API.\n  - `filter`: This represents the filter name used for the filter, which can be used to construct complex media queries with.\n  - `filterType`: This is either `string`, `integer`, or `boolean`, and describes the type of values used for the filter.\n  - `key`: This provides the endpoint where the possible range of values for the filter can be retrieved (e.g. for a \"Genre\" filter, it returns a list of all the genres in the library). This will include a `type` argument that matches the metadata type of the Type element.\n  - `title`: The title for the filter.\n- Each `Sort` object contains a description of the sort field.\n  - `defaultDirection`: Can be either `asc` or `desc`, and specifies the default direction for the sort field (e.g. titles default to alphabetically ascending).\n  - `descKey` and `key`: Contains the parameters passed to the `sort=...` media query for each direction of the sort.\n  - `title`: The title of the field.\n"
					},
					"response": [
						{
							"id": "88dd0444-9ea6-4c65-8eab-782aeab97be2",
							"name": "The details of the library",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/library/sections/:sectionId?includeDetails=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"library",
										"sections",
										":sectionId"
									],
									"query": [
										{
											"key": "includeDetails",
											"value": "0"
										}
									],
									"variable": [
										{
											"key": "sectionId",
											"value": "1000",
											"description": "(Required) the Id of the library to query"
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "2841b9b7-8e92-4485-900e-4632d8e34365",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/library/sections/:sectionId?includeDetails=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"library",
										"sections",
										":sectionId"
									],
									"query": [
										{
											"key": "includeDetails",
											"value": "0"
										}
									],
									"variable": [
										{
											"key": "sectionId",
											"value": "1000",
											"description": "(Required) the Id of the library to query"
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "30f0852d-ff20-44a8-af75-44792ab716ea",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/library/sections/:sectionId?includeDetails=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"library",
										"sections",
										":sectionId"
									],
									"query": [
										{
											"key": "includeDetails",
											"value": "0"
										}
									],
									"variable": [
										{
											"key": "sectionId",
											"value": "1000",
											"description": "(Required) the Id of the library to query"
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				},
				{
					"name": "Delete Library Section",
					"id": "63b76adf-9015-4e90-89c1-9fa0a92e8319",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/library/sections/:sectionId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"library",
								"sections",
								":sectionId"
							],
							"variable": [
								{
									"key": "sectionId",
									"value": "1000",
									"description": "(Required) the Id of the library to query"
								},
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "Delate a library using a specific section"
					},
					"response": [
						{
							"id": "baeab0f0-978d-4f9b-be40-9fa6505ec1dc",
							"name": "The library is deleted",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/library/sections/:sectionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"library",
										"sections",
										":sectionId"
									],
									"variable": [
										{
											"key": "sectionId",
											"value": "1000",
											"description": "(Required) the Id of the library to query"
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "230bd7e3-eacd-4a98-8498-6460de365290",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/library/sections/:sectionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"library",
										"sections",
										":sectionId"
									],
									"variable": [
										{
											"key": "sectionId",
											"value": "1000",
											"description": "(Required) the Id of the library to query"
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "bed67ea1-ca41-4db6-a0dd-8954297540b4",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/library/sections/:sectionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"library",
										"sections",
										":sectionId"
									],
									"variable": [
										{
											"key": "sectionId",
											"value": "1000",
											"description": "(Required) the Id of the library to query"
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				},
				{
					"name": "Get Library Items",
					"id": "a9ebd2f5-349d-4374-a149-8c4b0a8026ff",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/library/sections/:sectionId/all?type=40990660.07302156&filter=commodo sit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"library",
								"sections",
								":sectionId",
								"all"
							],
							"query": [
								{
									"key": "type",
									"value": "40990660.07302156",
									"description": "item type"
								},
								{
									"key": "filter",
									"value": "commodo sit",
									"description": "the filter parameter"
								}
							],
							"variable": [
								{
									"key": "sectionId",
									"value": "40990660.07302156",
									"description": "(Required) the Id of the library to query"
								},
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "This endpoint will return a list of library items filtered by the filter and type provided\n"
					},
					"response": [
						{
							"id": "9f615f67-795d-4848-b9cf-8f3255230c7c",
							"name": "The details of the library",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/library/sections/:sectionId/all?type=40990660.07302156&filter=commodo sit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"library",
										"sections",
										":sectionId",
										"all"
									],
									"query": [
										{
											"key": "type",
											"value": "40990660.07302156"
										},
										{
											"key": "filter",
											"value": "commodo sit"
										}
									],
									"variable": [
										{
											"key": "sectionId",
											"value": "40990660.07302156",
											"description": "(Required) the Id of the library to query"
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "4ee0362f-2999-4971-9e18-fa81dc61754d",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/library/sections/:sectionId/all?type=40990660.07302156&filter=commodo sit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"library",
										"sections",
										":sectionId",
										"all"
									],
									"query": [
										{
											"key": "type",
											"value": "40990660.07302156"
										},
										{
											"key": "filter",
											"value": "commodo sit"
										}
									],
									"variable": [
										{
											"key": "sectionId",
											"value": "40990660.07302156",
											"description": "(Required) the Id of the library to query"
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "0de336e7-c945-43af-a610-59a95fe149fd",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/library/sections/:sectionId/all?type=40990660.07302156&filter=commodo sit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"library",
										"sections",
										":sectionId",
										"all"
									],
									"query": [
										{
											"key": "type",
											"value": "40990660.07302156"
										},
										{
											"key": "filter",
											"value": "commodo sit"
										}
									],
									"variable": [
										{
											"key": "sectionId",
											"value": "40990660.07302156",
											"description": "(Required) the Id of the library to query"
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				},
				{
					"name": "Refresh Library",
					"id": "b0a48118-9590-43ae-8961-e16fdd56a933",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/library/sections/:sectionId/refresh",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"library",
								"sections",
								":sectionId",
								"refresh"
							],
							"variable": [
								{
									"key": "sectionId",
									"value": "40990660.07302156",
									"description": "(Required) the Id of the library to refresh"
								},
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "This endpoint Refreshes the library.\n"
					},
					"response": [
						{
							"id": "d24f2a35-339c-4a4d-8981-eb4b98f11a25",
							"name": "The library is refreshing",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/library/sections/:sectionId/refresh",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"library",
										"sections",
										":sectionId",
										"refresh"
									],
									"variable": [
										{
											"key": "sectionId",
											"value": "40990660.07302156",
											"description": "(Required) the Id of the library to refresh"
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "b7eccefb-3131-4723-a57d-f8241803b96f",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/library/sections/:sectionId/refresh",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"library",
										"sections",
										":sectionId",
										"refresh"
									],
									"variable": [
										{
											"key": "sectionId",
											"value": "40990660.07302156",
											"description": "(Required) the Id of the library to refresh"
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "db3489b9-3727-4460-b051-bd47343d1028",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/library/sections/:sectionId/refresh",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"library",
										"sections",
										":sectionId",
										"refresh"
									],
									"variable": [
										{
											"key": "sectionId",
											"value": "40990660.07302156",
											"description": "(Required) the Id of the library to refresh"
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				},
				{
					"name": "Get Latest Library Items",
					"id": "e71724c8-ed18-4d04-a3c7-41c786469f9e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/library/sections/:sectionId/latest?type=40990660.07302156&filter=commodo sit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"library",
								"sections",
								":sectionId",
								"latest"
							],
							"query": [
								{
									"key": "type",
									"value": "40990660.07302156",
									"description": "(Required) item type"
								},
								{
									"key": "filter",
									"value": "commodo sit",
									"description": "the filter parameter"
								}
							],
							"variable": [
								{
									"key": "sectionId",
									"value": "40990660.07302156",
									"description": "(Required) the Id of the library to query"
								},
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "This endpoint will return a list of the latest library items filtered by the filter and type provided\n"
					},
					"response": [
						{
							"id": "676bcd39-ff21-4aa2-8203-4321d0109d2a",
							"name": "The details of the library",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/library/sections/:sectionId/latest?type=40990660.07302156&filter=commodo sit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"library",
										"sections",
										":sectionId",
										"latest"
									],
									"query": [
										{
											"key": "type",
											"value": "40990660.07302156"
										},
										{
											"key": "filter",
											"value": "commodo sit"
										}
									],
									"variable": [
										{
											"key": "sectionId",
											"value": "40990660.07302156",
											"description": "(Required) the Id of the library to query"
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "3338c972-79e2-43e9-891c-3858f728588e",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/library/sections/:sectionId/latest?type=40990660.07302156&filter=commodo sit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"library",
										"sections",
										":sectionId",
										"latest"
									],
									"query": [
										{
											"key": "type",
											"value": "40990660.07302156"
										},
										{
											"key": "filter",
											"value": "commodo sit"
										}
									],
									"variable": [
										{
											"key": "sectionId",
											"value": "40990660.07302156",
											"description": "(Required) the Id of the library to query"
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "1b6ecda9-50e7-44b6-a0e6-7e4a22c9406d",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/library/sections/:sectionId/latest?type=40990660.07302156&filter=commodo sit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"library",
										"sections",
										":sectionId",
										"latest"
									],
									"query": [
										{
											"key": "type",
											"value": "40990660.07302156"
										},
										{
											"key": "filter",
											"value": "commodo sit"
										}
									],
									"variable": [
										{
											"key": "sectionId",
											"value": "40990660.07302156",
											"description": "(Required) the Id of the library to query"
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				},
				{
					"name": "Get Common Library Items",
					"id": "189f4ea7-495e-44df-9e52-668824dcbb19",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/library/sections/:sectionId/common?type=40990660.07302156&filter=commodo sit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"library",
								"sections",
								":sectionId",
								"common"
							],
							"query": [
								{
									"key": "type",
									"value": "40990660.07302156",
									"description": "(Required) item type"
								},
								{
									"key": "filter",
									"value": "commodo sit",
									"description": "the filter parameter"
								}
							],
							"variable": [
								{
									"key": "sectionId",
									"value": "40990660.07302156",
									"description": "(Required) the Id of the library to query"
								},
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "Represents a \"Common\" item. It contains only the common attributes of the items selected by the provided filter\n"
					},
					"response": [
						{
							"id": "3ec9dc0a-0111-4769-affa-cd784b993c64",
							"name": "The details of the library",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/library/sections/:sectionId/common?type=40990660.07302156&filter=commodo sit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"library",
										"sections",
										":sectionId",
										"common"
									],
									"query": [
										{
											"key": "type",
											"value": "40990660.07302156"
										},
										{
											"key": "filter",
											"value": "commodo sit"
										}
									],
									"variable": [
										{
											"key": "sectionId",
											"value": "40990660.07302156",
											"description": "(Required) the Id of the library to query"
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "df3e458d-1eb5-4c97-a06c-350ad73e8423",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/library/sections/:sectionId/common?type=40990660.07302156&filter=commodo sit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"library",
										"sections",
										":sectionId",
										"common"
									],
									"query": [
										{
											"key": "type",
											"value": "40990660.07302156"
										},
										{
											"key": "filter",
											"value": "commodo sit"
										}
									],
									"variable": [
										{
											"key": "sectionId",
											"value": "40990660.07302156",
											"description": "(Required) the Id of the library to query"
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "58df8b36-6791-4363-be6a-896c78eabea5",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/library/sections/:sectionId/common?type=40990660.07302156&filter=commodo sit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"library",
										"sections",
										":sectionId",
										"common"
									],
									"query": [
										{
											"key": "type",
											"value": "40990660.07302156"
										},
										{
											"key": "filter",
											"value": "commodo sit"
										}
									],
									"variable": [
										{
											"key": "sectionId",
											"value": "40990660.07302156",
											"description": "(Required) the Id of the library to query"
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						},
						{
							"id": "526b1e08-f295-462d-8618-043ad777c8d1",
							"name": "In response to a non-existant sectionId.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/library/sections/:sectionId/common?type=40990660.07302156&filter=commodo sit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"library",
										"sections",
										":sectionId",
										"common"
									],
									"query": [
										{
											"key": "type",
											"value": "40990660.07302156"
										},
										{
											"key": "filter",
											"value": "commodo sit"
										}
									],
									"variable": [
										{
											"key": "sectionId",
											"value": "40990660.07302156",
											"description": "(Required) the Id of the library to query"
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Items Metadata",
					"id": "a0269e50-b501-4e2e-9f17-31d861ddf03f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/library/metadata/:ratingKey",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"library",
								"metadata",
								":ratingKey"
							],
							"variable": [
								{
									"key": "ratingKey",
									"value": "40990660.07302156",
									"description": "(Required) the id of the library item to return the children of."
								},
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "This endpoint will return the metadata of a library item specified with the ratingKey.\n"
					},
					"response": [
						{
							"id": "6f143fff-dd33-4fcd-aced-806b4708e201",
							"name": "The children of the library item.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/library/metadata/:ratingKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"library",
										"metadata",
										":ratingKey"
									],
									"variable": [
										{
											"key": "ratingKey",
											"value": "40990660.07302156",
											"description": "(Required) the id of the library item to return the children of."
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "5da77d34-9abf-4be5-ade7-70163293a9bb",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/library/metadata/:ratingKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"library",
										"metadata",
										":ratingKey"
									],
									"variable": [
										{
											"key": "ratingKey",
											"value": "40990660.07302156",
											"description": "(Required) the id of the library item to return the children of."
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "2a89506c-efe9-4f4d-9e7e-00967f03a7a5",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/library/metadata/:ratingKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"library",
										"metadata",
										":ratingKey"
									],
									"variable": [
										{
											"key": "ratingKey",
											"value": "40990660.07302156",
											"description": "(Required) the id of the library item to return the children of."
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				},
				{
					"name": "Get Items Children",
					"id": "9e1a9fdd-b0af-43a2-992c-607b1fb457e9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/library/metadata/:ratingKey/children",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"library",
								"metadata",
								":ratingKey",
								"children"
							],
							"variable": [
								{
									"key": "ratingKey",
									"value": "40990660.07302156",
									"description": "(Required) the id of the library item to return the children of."
								},
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "This endpoint will return the children of of a library item specified with the ratingKey.\n"
					},
					"response": [
						{
							"id": "067d15ec-4a4e-4dea-b27c-f929959e7068",
							"name": "The children of the library item.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/library/metadata/:ratingKey/children",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"library",
										"metadata",
										":ratingKey",
										"children"
									],
									"variable": [
										{
											"key": "ratingKey",
											"value": "40990660.07302156",
											"description": "(Required) the id of the library item to return the children of."
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "47123921-5770-485d-aadb-cb6f8fc54c13",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/library/metadata/:ratingKey/children",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"library",
										"metadata",
										":ratingKey",
										"children"
									],
									"variable": [
										{
											"key": "ratingKey",
											"value": "40990660.07302156",
											"description": "(Required) the id of the library item to return the children of."
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "de509d63-1ee7-47a2-b390-7346a8e1f93e",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/library/metadata/:ratingKey/children",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"library",
										"metadata",
										":ratingKey",
										"children"
									],
									"variable": [
										{
											"key": "ratingKey",
											"value": "40990660.07302156",
											"description": "(Required) the id of the library item to return the children of."
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				},
				{
					"name": "Get On Deck",
					"id": "29da8abe-ae6f-4786-be41-3cd92d85fa66",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/library/onDeck",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"library",
								"onDeck"
							],
							"variable": [
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "This endpoint will return the on deck content.\n"
					},
					"response": [
						{
							"id": "9511fbe9-6617-41e9-b07b-a07b8befd1e4",
							"name": "The on Deck content",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/library/onDeck",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"library",
										"onDeck"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"MediaContainer\": {\n\t\t\"size\": 16,\n\t\t\"allowSync\": false,\n\t\t\"identifier\": \"com.plexapp.plugins.library\",\n\t\t\"mediaTagPrefix\": \"/system/bundle/media/flags/\",\n\t\t\"mediaTagVersion\": 1680021154,\n\t\t\"mixedParents\": false,\n\t\t\"Metadata\": [\n\t\t\t{\n\t\t\t\t\"allowSync\": false,\n\t\t\t\t\"librarySectionID\": 2,\n\t\t\t\t\"librarySectionTitle\": \"TV Shows\",\n\t\t\t\t\"librarySectionUUID\": \"4bb2521c-8ba9-459b-aaee-8ab8bc35eabd\",\n\t\t\t\t\"ratingKey\": 49564,\n\t\t\t\t\"key\": \"/library/metadata/49564\",\n\t\t\t\t\"parentRatingKey\": 49557,\n\t\t\t\t\"grandparentRatingKey\": 49556,\n\t\t\t\t\"guid\": \"plex://episode/5ea7d7402e7ab10042e74d4f\",\n\t\t\t\t\"parentGuid\": \"plex://season/602e754d67f4c8002ce54b3d\",\n\t\t\t\t\"grandparentGuid\": \"plex://show/5d9c090e705e7a001e6e94d8\",\n\t\t\t\t\"type\": \"episode\",\n\t\t\t\t\"title\": \"Circus\",\n\t\t\t\t\"grandparentKey\": \"/library/metadata/49556\",\n\t\t\t\t\"parentKey\": \"/library/metadata/49557\",\n\t\t\t\t\"librarySectionKey\": \"/library/sections/2\",\n\t\t\t\t\"grandparentTitle\": \"Bluey (2018)\",\n\t\t\t\t\"parentTitle\": \"Season 2\",\n\t\t\t\t\"contentRating\": \"TV-Y\",\n\t\t\t\t\"summary\": \"Bluey is the ringmaster in a game of circus with her friends but Hercules wants to play his motorcycle game instead. Luckily Bluey has a solution to keep everyone happy.\",\n\t\t\t\t\"index\": 33,\n\t\t\t\t\"parentIndex\": 2,\n\t\t\t\t\"lastViewedAt\": 1681908352,\n\t\t\t\t\"year\": 2018,\n\t\t\t\t\"thumb\": \"/library/metadata/49564/thumb/1654258204\",\n\t\t\t\t\"art\": \"/library/metadata/49556/art/1680939546\",\n\t\t\t\t\"parentThumb\": \"/library/metadata/49557/thumb/1654258204\",\n\t\t\t\t\"grandparentThumb\": \"/library/metadata/49556/thumb/1680939546\",\n\t\t\t\t\"grandparentArt\": \"/library/metadata/49556/art/1680939546\",\n\t\t\t\t\"grandparentTheme\": \"/library/metadata/49556/theme/1680939546\",\n\t\t\t\t\"duration\": 420080,\n\t\t\t\t\"originallyAvailableAt\": \"2004-02-17\",\n\t\t\t\t\"addedAt\": 1654258196,\n\t\t\t\t\"updatedAt\": 1654258204,\n\t\t\t\t\"Media\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"id\": 80994,\n\t\t\t\t\t\t\"duration\": 420080,\n\t\t\t\t\t\t\"bitrate\": 1046,\n\t\t\t\t\t\t\"width\": 1920,\n\t\t\t\t\t\t\"height\": 1080,\n\t\t\t\t\t\t\"aspectRatio\": 1.78,\n\t\t\t\t\t\t\"audioChannels\": 2,\n\t\t\t\t\t\t\"audioCodec\": \"aac\",\n\t\t\t\t\t\t\"videoCodec\": \"hevc\",\n\t\t\t\t\t\t\"videoResolution\": \"1080\",\n\t\t\t\t\t\t\"container\": \"mkv\",\n\t\t\t\t\t\t\"videoFrameRate\": \"PAL\",\n\t\t\t\t\t\t\"audioProfile\": \"lc\",\n\t\t\t\t\t\t\"videoProfile\": \"main\",\n\t\t\t\t\t\t\"Part\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"id\": 80994,\n\t\t\t\t\t\t\t\t\"key\": \"/library/parts/80994/1655007810/file.mkv\",\n\t\t\t\t\t\t\t\t\"duration\": 420080,\n\t\t\t\t\t\t\t\t\"file\": \"/tvshows/Bluey (2018)/Bluey (2018) - S02E33 - Circus.mkv\",\n\t\t\t\t\t\t\t\t\"size\": 55148931,\n\t\t\t\t\t\t\t\t\"audioProfile\": \"lc\",\n\t\t\t\t\t\t\t\t\"container\": \"mkv\",\n\t\t\t\t\t\t\t\t\"videoProfile\": \"main\",\n\t\t\t\t\t\t\t\t\"Stream\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"id\": 80994,\n\t\t\t\t\t\t\t\t\"key\": \"/library/parts/80994/1655007810/file.mkv\",\n\t\t\t\t\t\t\t\t\"duration\": 420080,\n\t\t\t\t\t\t\t\t\"file\": \"/tvshows/Bluey (2018)/Bluey (2018) - S02E33 - Circus.mkv\",\n\t\t\t\t\t\t\t\t\"size\": 55148931,\n\t\t\t\t\t\t\t\t\"audioProfile\": \"lc\",\n\t\t\t\t\t\t\t\t\"container\": \"mkv\",\n\t\t\t\t\t\t\t\t\"videoProfile\": \"main\",\n\t\t\t\t\t\t\t\t\"Stream\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"id\": 80994,\n\t\t\t\t\t\t\"duration\": 420080,\n\t\t\t\t\t\t\"bitrate\": 1046,\n\t\t\t\t\t\t\"width\": 1920,\n\t\t\t\t\t\t\"height\": 1080,\n\t\t\t\t\t\t\"aspectRatio\": 1.78,\n\t\t\t\t\t\t\"audioChannels\": 2,\n\t\t\t\t\t\t\"audioCodec\": \"aac\",\n\t\t\t\t\t\t\"videoCodec\": \"hevc\",\n\t\t\t\t\t\t\"videoResolution\": \"1080\",\n\t\t\t\t\t\t\"container\": \"mkv\",\n\t\t\t\t\t\t\"videoFrameRate\": \"PAL\",\n\t\t\t\t\t\t\"audioProfile\": \"lc\",\n\t\t\t\t\t\t\"videoProfile\": \"main\",\n\t\t\t\t\t\t\"Part\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"id\": 80994,\n\t\t\t\t\t\t\t\t\"key\": \"/library/parts/80994/1655007810/file.mkv\",\n\t\t\t\t\t\t\t\t\"duration\": 420080,\n\t\t\t\t\t\t\t\t\"file\": \"/tvshows/Bluey (2018)/Bluey (2018) - S02E33 - Circus.mkv\",\n\t\t\t\t\t\t\t\t\"size\": 55148931,\n\t\t\t\t\t\t\t\t\"audioProfile\": \"lc\",\n\t\t\t\t\t\t\t\t\"container\": \"mkv\",\n\t\t\t\t\t\t\t\t\"videoProfile\": \"main\",\n\t\t\t\t\t\t\t\t\"Stream\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"id\": 80994,\n\t\t\t\t\t\t\t\t\"key\": \"/library/parts/80994/1655007810/file.mkv\",\n\t\t\t\t\t\t\t\t\"duration\": 420080,\n\t\t\t\t\t\t\t\t\"file\": \"/tvshows/Bluey (2018)/Bluey (2018) - S02E33 - Circus.mkv\",\n\t\t\t\t\t\t\t\t\"size\": 55148931,\n\t\t\t\t\t\t\t\t\"audioProfile\": \"lc\",\n\t\t\t\t\t\t\t\t\"container\": \"mkv\",\n\t\t\t\t\t\t\t\t\"videoProfile\": \"main\",\n\t\t\t\t\t\t\t\t\"Stream\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"Guid\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"id\": \"imdb://tt13303712\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"id\": \"imdb://tt13303712\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"allowSync\": false,\n\t\t\t\t\"librarySectionID\": 2,\n\t\t\t\t\"librarySectionTitle\": \"TV Shows\",\n\t\t\t\t\"librarySectionUUID\": \"4bb2521c-8ba9-459b-aaee-8ab8bc35eabd\",\n\t\t\t\t\"ratingKey\": 49564,\n\t\t\t\t\"key\": \"/library/metadata/49564\",\n\t\t\t\t\"parentRatingKey\": 49557,\n\t\t\t\t\"grandparentRatingKey\": 49556,\n\t\t\t\t\"guid\": \"plex://episode/5ea7d7402e7ab10042e74d4f\",\n\t\t\t\t\"parentGuid\": \"plex://season/602e754d67f4c8002ce54b3d\",\n\t\t\t\t\"grandparentGuid\": \"plex://show/5d9c090e705e7a001e6e94d8\",\n\t\t\t\t\"type\": \"episode\",\n\t\t\t\t\"title\": \"Circus\",\n\t\t\t\t\"grandparentKey\": \"/library/metadata/49556\",\n\t\t\t\t\"parentKey\": \"/library/metadata/49557\",\n\t\t\t\t\"librarySectionKey\": \"/library/sections/2\",\n\t\t\t\t\"grandparentTitle\": \"Bluey (2018)\",\n\t\t\t\t\"parentTitle\": \"Season 2\",\n\t\t\t\t\"contentRating\": \"TV-Y\",\n\t\t\t\t\"summary\": \"Bluey is the ringmaster in a game of circus with her friends but Hercules wants to play his motorcycle game instead. Luckily Bluey has a solution to keep everyone happy.\",\n\t\t\t\t\"index\": 33,\n\t\t\t\t\"parentIndex\": 2,\n\t\t\t\t\"lastViewedAt\": 1681908352,\n\t\t\t\t\"year\": 2018,\n\t\t\t\t\"thumb\": \"/library/metadata/49564/thumb/1654258204\",\n\t\t\t\t\"art\": \"/library/metadata/49556/art/1680939546\",\n\t\t\t\t\"parentThumb\": \"/library/metadata/49557/thumb/1654258204\",\n\t\t\t\t\"grandparentThumb\": \"/library/metadata/49556/thumb/1680939546\",\n\t\t\t\t\"grandparentArt\": \"/library/metadata/49556/art/1680939546\",\n\t\t\t\t\"grandparentTheme\": \"/library/metadata/49556/theme/1680939546\",\n\t\t\t\t\"duration\": 420080,\n\t\t\t\t\"originallyAvailableAt\": \"2006-06-02\",\n\t\t\t\t\"addedAt\": 1654258196,\n\t\t\t\t\"updatedAt\": 1654258204,\n\t\t\t\t\"Media\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"id\": 80994,\n\t\t\t\t\t\t\"duration\": 420080,\n\t\t\t\t\t\t\"bitrate\": 1046,\n\t\t\t\t\t\t\"width\": 1920,\n\t\t\t\t\t\t\"height\": 1080,\n\t\t\t\t\t\t\"aspectRatio\": 1.78,\n\t\t\t\t\t\t\"audioChannels\": 2,\n\t\t\t\t\t\t\"audioCodec\": \"aac\",\n\t\t\t\t\t\t\"videoCodec\": \"hevc\",\n\t\t\t\t\t\t\"videoResolution\": \"1080\",\n\t\t\t\t\t\t\"container\": \"mkv\",\n\t\t\t\t\t\t\"videoFrameRate\": \"PAL\",\n\t\t\t\t\t\t\"audioProfile\": \"lc\",\n\t\t\t\t\t\t\"videoProfile\": \"main\",\n\t\t\t\t\t\t\"Part\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"id\": 80994,\n\t\t\t\t\t\t\t\t\"key\": \"/library/parts/80994/1655007810/file.mkv\",\n\t\t\t\t\t\t\t\t\"duration\": 420080,\n\t\t\t\t\t\t\t\t\"file\": \"/tvshows/Bluey (2018)/Bluey (2018) - S02E33 - Circus.mkv\",\n\t\t\t\t\t\t\t\t\"size\": 55148931,\n\t\t\t\t\t\t\t\t\"audioProfile\": \"lc\",\n\t\t\t\t\t\t\t\t\"container\": \"mkv\",\n\t\t\t\t\t\t\t\t\"videoProfile\": \"main\",\n\t\t\t\t\t\t\t\t\"Stream\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"id\": 80994,\n\t\t\t\t\t\t\t\t\"key\": \"/library/parts/80994/1655007810/file.mkv\",\n\t\t\t\t\t\t\t\t\"duration\": 420080,\n\t\t\t\t\t\t\t\t\"file\": \"/tvshows/Bluey (2018)/Bluey (2018) - S02E33 - Circus.mkv\",\n\t\t\t\t\t\t\t\t\"size\": 55148931,\n\t\t\t\t\t\t\t\t\"audioProfile\": \"lc\",\n\t\t\t\t\t\t\t\t\"container\": \"mkv\",\n\t\t\t\t\t\t\t\t\"videoProfile\": \"main\",\n\t\t\t\t\t\t\t\t\"Stream\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"id\": 80994,\n\t\t\t\t\t\t\"duration\": 420080,\n\t\t\t\t\t\t\"bitrate\": 1046,\n\t\t\t\t\t\t\"width\": 1920,\n\t\t\t\t\t\t\"height\": 1080,\n\t\t\t\t\t\t\"aspectRatio\": 1.78,\n\t\t\t\t\t\t\"audioChannels\": 2,\n\t\t\t\t\t\t\"audioCodec\": \"aac\",\n\t\t\t\t\t\t\"videoCodec\": \"hevc\",\n\t\t\t\t\t\t\"videoResolution\": \"1080\",\n\t\t\t\t\t\t\"container\": \"mkv\",\n\t\t\t\t\t\t\"videoFrameRate\": \"PAL\",\n\t\t\t\t\t\t\"audioProfile\": \"lc\",\n\t\t\t\t\t\t\"videoProfile\": \"main\",\n\t\t\t\t\t\t\"Part\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"id\": 80994,\n\t\t\t\t\t\t\t\t\"key\": \"/library/parts/80994/1655007810/file.mkv\",\n\t\t\t\t\t\t\t\t\"duration\": 420080,\n\t\t\t\t\t\t\t\t\"file\": \"/tvshows/Bluey (2018)/Bluey (2018) - S02E33 - Circus.mkv\",\n\t\t\t\t\t\t\t\t\"size\": 55148931,\n\t\t\t\t\t\t\t\t\"audioProfile\": \"lc\",\n\t\t\t\t\t\t\t\t\"container\": \"mkv\",\n\t\t\t\t\t\t\t\t\"videoProfile\": \"main\",\n\t\t\t\t\t\t\t\t\"Stream\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"id\": 80994,\n\t\t\t\t\t\t\t\t\"key\": \"/library/parts/80994/1655007810/file.mkv\",\n\t\t\t\t\t\t\t\t\"duration\": 420080,\n\t\t\t\t\t\t\t\t\"file\": \"/tvshows/Bluey (2018)/Bluey (2018) - S02E33 - Circus.mkv\",\n\t\t\t\t\t\t\t\t\"size\": 55148931,\n\t\t\t\t\t\t\t\t\"audioProfile\": \"lc\",\n\t\t\t\t\t\t\t\t\"container\": \"mkv\",\n\t\t\t\t\t\t\t\t\"videoProfile\": \"main\",\n\t\t\t\t\t\t\t\t\"Stream\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"Guid\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"id\": \"imdb://tt13303712\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"id\": \"imdb://tt13303712\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t}\n}"
						},
						{
							"id": "3f7031f2-cbbe-4e07-b2a3-d9dc30332dac",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/library/onDeck",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"library",
										"onDeck"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "61f8ebe2-ec24-4b75-ba83-8de2a6e2eff3",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/library/onDeck",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"library",
										"onDeck"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				}
			],
			"id": "3da20816-085f-4a93-84ec-58b888aac07f",
			"description": "API Calls interacting with Plex Media Server Libraries\n"
		},
		{
			"name": "Media",
			"item": [
				{
					"name": "Mark Media Played",
					"id": "57d317c3-ffac-43d5-ac95-81f38efadb1c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/:/scrobble?key=59398",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								":",
								"scrobble"
							],
							"query": [
								{
									"key": "key",
									"value": "59398",
									"description": "(Required) The media key to mark as played"
								}
							],
							"variable": [
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "This will mark the provided media key as Played."
					},
					"response": [
						{
							"id": "304d327b-3c69-4611-a6df-24f98493d2f9",
							"name": "Media is marked Played",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/:/scrobble?key=59398",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										":",
										"scrobble"
									],
									"query": [
										{
											"key": "key",
											"value": "59398"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "08913a2b-2484-4843-9f84-5f7bdd38c047",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/:/scrobble?key=59398",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										":",
										"scrobble"
									],
									"query": [
										{
											"key": "key",
											"value": "59398"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				},
				{
					"name": "Mark Media Unplayed",
					"id": "fa8291a7-2a1b-40cf-98da-1077bf14911b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/:/unscrobble?key=59398",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								":",
								"unscrobble"
							],
							"query": [
								{
									"key": "key",
									"value": "59398",
									"description": "(Required) The media key to mark as Unplayed"
								}
							],
							"variable": [
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "This will mark the provided media key as Unplayed."
					},
					"response": [
						{
							"id": "4e7b67b6-18fa-4d39-937b-3c4634f47d6d",
							"name": "Media is marked Unplayed",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/:/unscrobble?key=59398",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										":",
										"unscrobble"
									],
									"query": [
										{
											"key": "key",
											"value": "59398"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "bda524ce-51b5-4189-9ea9-8361bb795640",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/:/unscrobble?key=59398",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										":",
										"unscrobble"
									],
									"query": [
										{
											"key": "key",
											"value": "59398"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "39024073-3233-4709-a52e-e8f205725468",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/:/unscrobble?key=59398",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										":",
										"unscrobble"
									],
									"query": [
										{
											"key": "key",
											"value": "59398"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				},
				{
					"name": "Update Media Play Progress",
					"id": "96a1e294-d0f3-467a-9b46-6df370601c1f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/:/progress?key=commodo sit&time=90000&state=played",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								":",
								"progress"
							],
							"query": [
								{
									"key": "key",
									"value": "commodo sit",
									"description": "(Required) the media key"
								},
								{
									"key": "time",
									"value": "90000",
									"description": "(Required) The time, in milliseconds, used to set the media playback progress."
								},
								{
									"key": "state",
									"value": "played",
									"description": "(Required) The playback state of the media item."
								}
							],
							"variable": [
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "This API command can be used to update the play progress of a media item.\n"
					},
					"response": [
						{
							"id": "e875f501-b807-47a2-8b51-9893b5e13266",
							"name": "Success - The request was successful.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/:/progress?key=commodo sit&time=90000&state=played",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										":",
										"progress"
									],
									"query": [
										{
											"key": "key",
											"value": "commodo sit"
										},
										{
											"key": "time",
											"value": "90000"
										},
										{
											"key": "state",
											"value": "played"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "4c1aa796-befb-44ec-9747-f9e7d0ce14a3",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/:/progress?key=commodo sit&time=90000&state=played",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										":",
										"progress"
									],
									"query": [
										{
											"key": "key",
											"value": "commodo sit"
										},
										{
											"key": "time",
											"value": "90000"
										},
										{
											"key": "state",
											"value": "played"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "9521230f-6e98-4bb8-a597-db24ee03f9d3",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/:/progress?key=commodo sit&time=90000&state=played",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										":",
										"progress"
									],
									"query": [
										{
											"key": "key",
											"value": "commodo sit"
										},
										{
											"key": "time",
											"value": "90000"
										},
										{
											"key": "state",
											"value": "played"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				}
			],
			"id": "0588dfa8-3d9d-4181-8cdd-5d36db7617e6",
			"description": "API Calls interacting with Plex Media Server Media\n"
		},
		{
			"name": "Hubs",
			"item": [
				{
					"name": "Get Global Hubs",
					"id": "058f8aab-dab2-43b3-8f6d-81f9b451b360",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/hubs?count=40990660.07302156&onlyTransient=1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"hubs"
							],
							"query": [
								{
									"key": "count",
									"value": "40990660.07302156",
									"description": "The number of items to return with each hub."
								},
								{
									"key": "onlyTransient",
									"value": "1",
									"description": "Only return hubs which are \"transient\", meaning those which are prone to changing after media playback or addition (e.g. On Deck, or Recently Added)."
								}
							],
							"variable": [
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "Get Global Hubs filtered by the parameters provided."
					},
					"response": [
						{
							"id": "ab1e3722-4564-466a-9387-dbcfa7698c4f",
							"name": "returns global hubs",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/hubs?count=40990660.07302156&onlyTransient=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"hubs"
									],
									"query": [
										{
											"key": "count",
											"value": "40990660.07302156"
										},
										{
											"key": "onlyTransient",
											"value": "1"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "22f1e264-48f8-48ae-a7b1-6d4b6cb694de",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/hubs?count=40990660.07302156&onlyTransient=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"hubs"
									],
									"query": [
										{
											"key": "count",
											"value": "40990660.07302156"
										},
										{
											"key": "onlyTransient",
											"value": "1"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "6cf80f9b-98db-4a59-bea6-074926f4931d",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/hubs?count=40990660.07302156&onlyTransient=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"hubs"
									],
									"query": [
										{
											"key": "count",
											"value": "40990660.07302156"
										},
										{
											"key": "onlyTransient",
											"value": "1"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				},
				{
					"name": "Get library specific hubs",
					"id": "2e0be6e3-735f-425e-ae42-91c20e8cecfb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/hubs/sections/:sectionId?count=40990660.07302156&onlyTransient=1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"hubs",
								"sections",
								":sectionId"
							],
							"query": [
								{
									"key": "count",
									"value": "40990660.07302156",
									"description": "The number of items to return with each hub."
								},
								{
									"key": "onlyTransient",
									"value": "1",
									"description": "Only return hubs which are \"transient\", meaning those which are prone to changing after media playback or addition (e.g. On Deck, or Recently Added)."
								}
							],
							"variable": [
								{
									"key": "sectionId",
									"value": "40990660.07302156",
									"description": "(Required) the Id of the library to query"
								},
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "This endpoint will return a list of library specific hubs\n"
					},
					"response": [
						{
							"id": "8d26020e-a84d-4488-bca9-e0d50d7ca6ae",
							"name": "The hubs specific to the library",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/hubs/sections/:sectionId?count=40990660.07302156&onlyTransient=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"hubs",
										"sections",
										":sectionId"
									],
									"query": [
										{
											"key": "count",
											"value": "40990660.07302156"
										},
										{
											"key": "onlyTransient",
											"value": "1"
										}
									],
									"variable": [
										{
											"key": "sectionId",
											"value": "40990660.07302156",
											"description": "(Required) the Id of the library to query"
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "9a547778-f220-4b36-a314-5d3fe6ff047a",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/hubs/sections/:sectionId?count=40990660.07302156&onlyTransient=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"hubs",
										"sections",
										":sectionId"
									],
									"query": [
										{
											"key": "count",
											"value": "40990660.07302156"
										},
										{
											"key": "onlyTransient",
											"value": "1"
										}
									],
									"variable": [
										{
											"key": "sectionId",
											"value": "40990660.07302156",
											"description": "(Required) the Id of the library to query"
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "0cf151f8-2df0-4eb0-9fc3-38919e70cd27",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/hubs/sections/:sectionId?count=40990660.07302156&onlyTransient=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"hubs",
										"sections",
										":sectionId"
									],
									"query": [
										{
											"key": "count",
											"value": "40990660.07302156"
										},
										{
											"key": "onlyTransient",
											"value": "1"
										}
									],
									"variable": [
										{
											"key": "sectionId",
											"value": "40990660.07302156",
											"description": "(Required) the Id of the library to query"
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				}
			],
			"id": "71ea068d-838a-44df-ba62-cca75bf9326c",
			"description": "Hubs are a structured two-dimensional container for media, generally represented by multiple horizontal rows.\n"
		},
		{
			"name": "Playlists",
			"item": [
				{
					"name": "Create a Playlist",
					"id": "559ba9b8-3346-404f-ab8d-61343943775b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/playlists?title=commodo sit&type=video&smart=1&uri=commodo sit&playQueueID=40990660.07302156",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"playlists"
							],
							"query": [
								{
									"key": "title",
									"value": "commodo sit",
									"description": "(Required) name of the playlist"
								},
								{
									"key": "type",
									"value": "video",
									"description": "(Required) type of playlist to create"
								},
								{
									"key": "smart",
									"value": "1",
									"description": "(Required) whether the playlist is smart or not"
								},
								{
									"key": "uri",
									"value": "commodo sit",
									"description": "the content URI for the playlist"
								},
								{
									"key": "playQueueID",
									"value": "40990660.07302156",
									"description": "the play queue to copy to a playlist"
								}
							],
							"variable": [
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "Create a new playlist. By default the playlist is blank. To create a playlist along with a first item, pass:\n- `uri` - The content URI for what we're playing (e.g. `library://...`).\n- `playQueueID` - To create a playlist from an existing play queue.\n"
					},
					"response": [
						{
							"id": "df85e466-3632-4249-aa56-90db2928cfc9",
							"name": "returns all playlists",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/playlists?title=commodo sit&type=video&smart=1&uri=commodo sit&playQueueID=40990660.07302156",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"playlists"
									],
									"query": [
										{
											"key": "title",
											"value": "commodo sit"
										},
										{
											"key": "type",
											"value": "video"
										},
										{
											"key": "smart",
											"value": "1"
										},
										{
											"key": "uri",
											"value": "commodo sit"
										},
										{
											"key": "playQueueID",
											"value": "40990660.07302156"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "1dc8dfa9-2346-4daf-b42e-a38faec7aa2f",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/playlists?title=commodo sit&type=video&smart=1&uri=commodo sit&playQueueID=40990660.07302156",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"playlists"
									],
									"query": [
										{
											"key": "title",
											"value": "commodo sit"
										},
										{
											"key": "type",
											"value": "video"
										},
										{
											"key": "smart",
											"value": "1"
										},
										{
											"key": "uri",
											"value": "commodo sit"
										},
										{
											"key": "playQueueID",
											"value": "40990660.07302156"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "ae002824-8d96-4d08-b6df-0917faf2e81e",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/playlists?title=commodo sit&type=video&smart=1&uri=commodo sit&playQueueID=40990660.07302156",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"playlists"
									],
									"query": [
										{
											"key": "title",
											"value": "commodo sit"
										},
										{
											"key": "type",
											"value": "video"
										},
										{
											"key": "smart",
											"value": "1"
										},
										{
											"key": "uri",
											"value": "commodo sit"
										},
										{
											"key": "playQueueID",
											"value": "40990660.07302156"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				},
				{
					"name": "Get All Playlists",
					"id": "2d3c804b-4c54-40ad-8947-aa28ae8cb33a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/playlists/all?playlistType=video&smart=1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"playlists",
								"all"
							],
							"query": [
								{
									"key": "playlistType",
									"value": "video",
									"description": "limit to a type of playlist."
								},
								{
									"key": "smart",
									"value": "1",
									"description": "type of playlists to return (default is all)."
								}
							],
							"variable": [
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "Get All Playlists given the specified filters."
					},
					"response": [
						{
							"id": "271214fc-a390-41fe-bba2-1e2bd8779af1",
							"name": "returns all playlists",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/playlists/all?playlistType=video&smart=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"playlists",
										"all"
									],
									"query": [
										{
											"key": "playlistType",
											"value": "video"
										},
										{
											"key": "smart",
											"value": "1"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "ffd3ffdd-4af9-4991-a53f-4b1adef2d147",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/playlists/all?playlistType=video&smart=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"playlists",
										"all"
									],
									"query": [
										{
											"key": "playlistType",
											"value": "video"
										},
										{
											"key": "smart",
											"value": "1"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "dd2f8c10-e72c-49c6-9f97-8c83ec3f7705",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/playlists/all?playlistType=video&smart=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"playlists",
										"all"
									],
									"query": [
										{
											"key": "playlistType",
											"value": "video"
										},
										{
											"key": "smart",
											"value": "1"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				},
				{
					"name": "Retrieve Playlist",
					"id": "d0821a02-5df8-43bb-94bb-723d02fdadf0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/playlists/:playlistID",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"playlists",
								":playlistID"
							],
							"variable": [
								{
									"key": "playlistID",
									"value": "40990660.07302156",
									"description": "(Required) the ID of the playlist"
								},
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "Gets detailed metadata for a playlist. A playlist for many purposes (rating, editing metadata, tagging), can be treated like a regular metadata item:\nSmart playlist details contain the `content` attribute. This is the content URI for the generator. This can then be parsed by a client to provide smart playlist editing.\n"
					},
					"response": [
						{
							"id": "b452cef9-6d80-4f31-b501-7f23563906bb",
							"name": "The playlist",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/playlists/:playlistID",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"playlists",
										":playlistID"
									],
									"variable": [
										{
											"key": "playlistID",
											"value": "40990660.07302156",
											"description": "(Required) the ID of the playlist"
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "0810dd37-3bd3-42f6-8705-30e59e1ca586",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/playlists/:playlistID",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"playlists",
										":playlistID"
									],
									"variable": [
										{
											"key": "playlistID",
											"value": "40990660.07302156",
											"description": "(Required) the ID of the playlist"
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "7a966d61-8f82-4de8-b799-e4b5e149d7e0",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/playlists/:playlistID",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"playlists",
										":playlistID"
									],
									"variable": [
										{
											"key": "playlistID",
											"value": "40990660.07302156",
											"description": "(Required) the ID of the playlist"
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				},
				{
					"name": "Deletes a Playlist",
					"id": "5f5bab0c-9c46-4936-b2f6-a6b8204dd9d3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/playlists/:playlistID",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"playlists",
								":playlistID"
							],
							"variable": [
								{
									"key": "playlistID",
									"value": "40990660.07302156",
									"description": "(Required) the ID of the playlist"
								},
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "This endpoint will delete a playlist\n"
					},
					"response": [
						{
							"id": "2182a36d-61ca-4142-8c57-ff4bd9f3d110",
							"name": "The playlist is deleted",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/playlists/:playlistID",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"playlists",
										":playlistID"
									],
									"variable": [
										{
											"key": "playlistID",
											"value": "40990660.07302156",
											"description": "(Required) the ID of the playlist"
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "8e45f63a-6808-4aeb-a673-edaec49804c1",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/playlists/:playlistID",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"playlists",
										":playlistID"
									],
									"variable": [
										{
											"key": "playlistID",
											"value": "40990660.07302156",
											"description": "(Required) the ID of the playlist"
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "9687f844-b541-49be-8fa6-c042e5c2de15",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/playlists/:playlistID",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"playlists",
										":playlistID"
									],
									"variable": [
										{
											"key": "playlistID",
											"value": "40990660.07302156",
											"description": "(Required) the ID of the playlist"
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				},
				{
					"name": "Update a Playlist",
					"id": "e2d2b5dc-6724-4215-bd48-dfa2a529b506",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/playlists/:playlistID",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"playlists",
								":playlistID"
							],
							"variable": [
								{
									"key": "playlistID",
									"value": "40990660.07302156",
									"description": "(Required) the ID of the playlist"
								},
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "From PMS version 1.9.1 clients can also edit playlist metadata using this endpoint as they would via `PUT /library/metadata/{playlistID}`\n"
					},
					"response": [
						{
							"id": "f28bb8ae-9869-4b68-a547-26bf69f3d009",
							"name": "The playlist is deleted",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/playlists/:playlistID",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"playlists",
										":playlistID"
									],
									"variable": [
										{
											"key": "playlistID",
											"value": "40990660.07302156",
											"description": "(Required) the ID of the playlist"
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "efdd6420-ba81-478f-b78a-d94cc9541e4e",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/playlists/:playlistID",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"playlists",
										":playlistID"
									],
									"variable": [
										{
											"key": "playlistID",
											"value": "40990660.07302156",
											"description": "(Required) the ID of the playlist"
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "5ffa1632-6d24-40a7-8cf3-a5523c3641f2",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/playlists/:playlistID",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"playlists",
										":playlistID"
									],
									"variable": [
										{
											"key": "playlistID",
											"value": "40990660.07302156",
											"description": "(Required) the ID of the playlist"
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				},
				{
					"name": "Retrieve Playlist Contents",
					"id": "234e469b-65b9-469b-a37d-02a9c333fbac",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/playlists/:playlistID/items?type=40990660.07302156",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"playlists",
								":playlistID",
								"items"
							],
							"query": [
								{
									"key": "type",
									"value": "40990660.07302156",
									"description": "(Required) the metadata type of the item to return"
								}
							],
							"variable": [
								{
									"key": "playlistID",
									"value": "40990660.07302156",
									"description": "(Required) the ID of the playlist"
								},
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "Gets the contents of a playlist. Should be paged by clients via standard mechanisms. \nBy default leaves are returned (e.g. episodes, movies). In order to return other types you can use the `type` parameter. \nFor example, you could use this to display a list of recently added albums vis a smart playlist. \nNote that for dumb playlists, items have a `playlistItemID` attribute which is used for deleting or moving items.\n"
					},
					"response": [
						{
							"id": "ecb3de64-9049-45a6-b76a-38765a7a7d0e",
							"name": "The playlist contents",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/playlists/:playlistID/items?type=40990660.07302156",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"playlists",
										":playlistID",
										"items"
									],
									"query": [
										{
											"key": "type",
											"value": "40990660.07302156"
										}
									],
									"variable": [
										{
											"key": "playlistID",
											"value": "40990660.07302156",
											"description": "(Required) the ID of the playlist"
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "3bf7aa46-e94b-4852-a115-fa3f69a6733f",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/playlists/:playlistID/items?type=40990660.07302156",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"playlists",
										":playlistID",
										"items"
									],
									"query": [
										{
											"key": "type",
											"value": "40990660.07302156"
										}
									],
									"variable": [
										{
											"key": "playlistID",
											"value": "40990660.07302156",
											"description": "(Required) the ID of the playlist"
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "5a5cc2c5-6730-40d8-a5ac-d2ce3ca8c20a",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/playlists/:playlistID/items?type=40990660.07302156",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"playlists",
										":playlistID",
										"items"
									],
									"query": [
										{
											"key": "type",
											"value": "40990660.07302156"
										}
									],
									"variable": [
										{
											"key": "playlistID",
											"value": "40990660.07302156",
											"description": "(Required) the ID of the playlist"
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				},
				{
					"name": "Delete Playlist Contents",
					"id": "521c3ffb-fc45-41c0-af9c-748d7964fa89",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/playlists/:playlistID/items",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"playlists",
								":playlistID",
								"items"
							],
							"variable": [
								{
									"key": "playlistID",
									"value": "40990660.07302156",
									"description": "(Required) the ID of the playlist"
								},
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "Clears a playlist, only works with dumb playlists. Returns the playlist.\n"
					},
					"response": [
						{
							"id": "8b18595f-3cfe-47f6-93c0-e1487c8e69e9",
							"name": "The playlist contents are cleared",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/playlists/:playlistID/items",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"playlists",
										":playlistID",
										"items"
									],
									"variable": [
										{
											"key": "playlistID",
											"value": "40990660.07302156",
											"description": "(Required) the ID of the playlist"
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "19bea43f-8084-4c87-92a4-23758e18dc91",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/playlists/:playlistID/items",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"playlists",
										":playlistID",
										"items"
									],
									"variable": [
										{
											"key": "playlistID",
											"value": "40990660.07302156",
											"description": "(Required) the ID of the playlist"
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "8f47f68e-6591-43d6-b7eb-5c947eea8425",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/playlists/:playlistID/items",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"playlists",
										":playlistID",
										"items"
									],
									"variable": [
										{
											"key": "playlistID",
											"value": "40990660.07302156",
											"description": "(Required) the ID of the playlist"
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				},
				{
					"name": "Adding to a Playlist",
					"id": "952a2b5b-353b-459e-aa65-c7210141d89a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/playlists/:playlistID/items?uri=library://..&playQueueID=123",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"playlists",
								":playlistID",
								"items"
							],
							"query": [
								{
									"key": "uri",
									"value": "library://..",
									"description": "(Required) the content URI for the playlist"
								},
								{
									"key": "playQueueID",
									"value": "123",
									"description": "(Required) the play queue to add to a playlist"
								}
							],
							"variable": [
								{
									"key": "playlistID",
									"value": "40990660.07302156",
									"description": "(Required) the ID of the playlist"
								},
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "Adds a generator to a playlist, same parameters as the POST above. With a dumb playlist, this adds the specified items to the playlist. \nWith a smart playlist, passing a new `uri` parameter replaces the rules for the playlist. Returns the playlist.\n"
					},
					"response": [
						{
							"id": "eaf4bb27-6d1e-4e0c-b41e-ae7a1ec0a80a",
							"name": "Playlist Updated",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/playlists/:playlistID/items?uri=library://..&playQueueID=123",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"playlists",
										":playlistID",
										"items"
									],
									"query": [
										{
											"key": "uri",
											"value": "library://.."
										},
										{
											"key": "playQueueID",
											"value": "123"
										}
									],
									"variable": [
										{
											"key": "playlistID",
											"value": "40990660.07302156",
											"description": "(Required) the ID of the playlist"
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "72a3c047-7c7f-47bf-af7d-49ee78dbad64",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/playlists/:playlistID/items?uri=library://..&playQueueID=123",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"playlists",
										":playlistID",
										"items"
									],
									"query": [
										{
											"key": "uri",
											"value": "library://.."
										},
										{
											"key": "playQueueID",
											"value": "123"
										}
									],
									"variable": [
										{
											"key": "playlistID",
											"value": "40990660.07302156",
											"description": "(Required) the ID of the playlist"
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "f5540684-6d63-4381-9f6a-fb1cd99d7898",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/playlists/:playlistID/items?uri=library://..&playQueueID=123",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"playlists",
										":playlistID",
										"items"
									],
									"query": [
										{
											"key": "uri",
											"value": "library://.."
										},
										{
											"key": "playQueueID",
											"value": "123"
										}
									],
									"variable": [
										{
											"key": "playlistID",
											"value": "40990660.07302156",
											"description": "(Required) the ID of the playlist"
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				},
				{
					"name": "Upload Playlist",
					"id": "298ccb14-1b2a-4c05-9fb7-5a48a9ecd913",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/playlists/upload?path=/home/barkley/playlist.m3u&force=1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"playlists",
								"upload"
							],
							"query": [
								{
									"key": "path",
									"value": "/home/barkley/playlist.m3u",
									"description": "(Required) absolute path to a directory on the server where m3u files are stored, or the absolute path to a playlist file on the server. \nIf the `path` argument is a directory, that path will be scanned for playlist files to be processed. \nEach file in that directory creates a separate playlist, with a name based on the filename of the file that created it. \nThe GUID of each playlist is based on the filename. \nIf the `path` argument is a file, that file will be used to create a new playlist, with the name based on the filename of the file that created it. \nThe GUID of each playlist is based on the filename.\n"
								},
								{
									"key": "force",
									"value": "1",
									"description": "(Required) force overwriting of duplicate playlists. By default, a playlist file uploaded with the same path will overwrite the existing playlist. \nThe `force` argument is used to disable overwriting. If the `force` argument is set to 0, a new playlist will be created suffixed with the date and time that the duplicate was uploaded.\n"
								}
							],
							"variable": [
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "Imports m3u playlists by passing a path on the server to scan for m3u-formatted playlist files, or a path to a single playlist file.\n"
					},
					"response": [
						{
							"id": "cc8b675c-317a-4fe5-bd2d-9f523bfd5c9e",
							"name": "The playlist is uploaded",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/playlists/upload?path=/home/barkley/playlist.m3u&force=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"playlists",
										"upload"
									],
									"query": [
										{
											"key": "path",
											"value": "/home/barkley/playlist.m3u"
										},
										{
											"key": "force",
											"value": "1"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "718e24d3-84f1-44b7-883f-7c1b2b7b9ff8",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/playlists/upload?path=/home/barkley/playlist.m3u&force=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"playlists",
										"upload"
									],
									"query": [
										{
											"key": "path",
											"value": "/home/barkley/playlist.m3u"
										},
										{
											"key": "force",
											"value": "1"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "c5652e6e-5002-4670-896f-a10fd3eaccfb",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/playlists/upload?path=/home/barkley/playlist.m3u&force=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"playlists",
										"upload"
									],
									"query": [
										{
											"key": "path",
											"value": "/home/barkley/playlist.m3u"
										},
										{
											"key": "force",
											"value": "1"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				}
			],
			"id": "88388b86-148a-4f6b-8ba3-2f95d84dabb0",
			"description": "Playlists are ordered collections of media. They can be dumb (just a list of media) or smart (based on a media query, such as \"all albums from 2017\"). \nThey can be organized in (optionally nesting) folders.\nRetrieving a playlist, or its items, will trigger a refresh of its metadata. \nThis may cause the duration and number of items to change.\n"
		},
		{
			"name": "Search",
			"item": [
				{
					"name": "Perform a search",
					"id": "24ea3f6d-fd57-4e36-9609-ace1b3b5a196",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/hubs/search?query=arnold&sectionId=40990660.07302156&limit=5",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"hubs",
								"search"
							],
							"query": [
								{
									"key": "query",
									"value": "arnold",
									"description": "(Required) The query term"
								},
								{
									"key": "sectionId",
									"value": "40990660.07302156",
									"description": "This gives context to the search, and can result in re-ordering of search result hubs"
								},
								{
									"key": "limit",
									"value": "5",
									"description": "The number of items to return per hub"
								}
							],
							"variable": [
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "This endpoint performs a search across all library sections, or a single section, and returns matches as hubs, split up by type. It performs spell checking, looks for partial matches, and orders the hubs based on quality of results. In addition, based on matches, it will return other related matches (e.g. for a genre match, it may return movies in that genre, or for an actor match, movies with that actor).\n\nIn the response's items, the following extra attributes are returned to further describe or disambiguate the result:\n\n- `reason`: The reason for the result, if not because of a direct search term match; can be either:\n  - `section`: There are multiple identical results from different sections.\n  - `originalTitle`: There was a search term match from the original title field (sometimes those can be very different or in a foreign language).\n  - `<hub identifier>`: If the reason for the result is due to a result in another hub, the source hub identifier is returned. For example, if the search is for \"dylan\" then Bob Dylan may be returned as an artist result, an a few of his albums returned as album results with a reason code of `artist` (the identifier of that particular hub). Or if the search is for \"arnold\", there might be movie results returned with a reason of `actor`\n- `reasonTitle`: The string associated with the reason code. For a section reason, it'll be the section name; For a hub identifier, it'll be a string associated with the match (e.g. `Arnold Schwarzenegger` for movies which were returned because the search was for \"arnold\").\n- `reasonID`: The ID of the item associated with the reason for the result. This might be a section ID, a tag ID, an artist ID, or a show ID.\n\nThis request is intended to be very fast, and called as the user types.\n"
					},
					"response": [
						{
							"id": "edd7f101-72b6-4118-914f-99d930760d72",
							"name": "The search results",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/hubs/search?query=arnold&sectionId=40990660.07302156&limit=5",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"hubs",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "arnold"
										},
										{
											"key": "sectionId",
											"value": "40990660.07302156"
										},
										{
											"key": "limit",
											"value": "5"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "81e53dd2-04a8-43a3-9ac8-70311d86d897",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/hubs/search?query=arnold&sectionId=40990660.07302156&limit=5",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"hubs",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "arnold"
										},
										{
											"key": "sectionId",
											"value": "40990660.07302156"
										},
										{
											"key": "limit",
											"value": "5"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "83867e2e-df85-4b5f-b0e2-f1719517685c",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/hubs/search?query=arnold&sectionId=40990660.07302156&limit=5",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"hubs",
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "arnold"
										},
										{
											"key": "sectionId",
											"value": "40990660.07302156"
										},
										{
											"key": "limit",
											"value": "5"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				},
				{
					"name": "Perform a voice search",
					"id": "95a5ee7f-b343-4a6e-933f-70632f82bae4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/hubs/search/voice?query=dead+poop&sectionId=40990660.07302156&limit=5",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"hubs",
								"search",
								"voice"
							],
							"query": [
								{
									"key": "query",
									"value": "dead+poop",
									"description": "(Required) The query term"
								},
								{
									"key": "sectionId",
									"value": "40990660.07302156",
									"description": "This gives context to the search, and can result in re-ordering of search result hubs"
								},
								{
									"key": "limit",
									"value": "5",
									"description": "The number of items to return per hub"
								}
							],
							"variable": [
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "This endpoint performs a search specifically tailored towards voice or other imprecise input which may work badly with the substring and spell-checking heuristics used by the `/hubs/search` endpoint. \nIt uses a [Levenshtein distance](https://en.wikipedia.org/wiki/Levenshtein_distance) heuristic to search titles, and as such is much slower than the other search endpoint. \nWhenever possible, clients should limit the search to the appropriate type. \nResults, as well as their containing per-type hubs, contain a `distance` attribute which can be used to judge result quality.\n"
					},
					"response": [
						{
							"id": "42b8db9a-981f-46b7-a32c-fdea28927466",
							"name": "The search results",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/hubs/search/voice?query=dead+poop&sectionId=40990660.07302156&limit=5",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"hubs",
										"search",
										"voice"
									],
									"query": [
										{
											"key": "query",
											"value": "dead+poop"
										},
										{
											"key": "sectionId",
											"value": "40990660.07302156"
										},
										{
											"key": "limit",
											"value": "5"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "8c769802-4425-4b4a-9077-81a6f012dabf",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/hubs/search/voice?query=dead+poop&sectionId=40990660.07302156&limit=5",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"hubs",
										"search",
										"voice"
									],
									"query": [
										{
											"key": "query",
											"value": "dead+poop"
										},
										{
											"key": "sectionId",
											"value": "40990660.07302156"
										},
										{
											"key": "limit",
											"value": "5"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "bcd3221c-ba3f-4e03-bd2d-005b799fa912",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/hubs/search/voice?query=dead+poop&sectionId=40990660.07302156&limit=5",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"hubs",
										"search",
										"voice"
									],
									"query": [
										{
											"key": "query",
											"value": "dead+poop"
										},
										{
											"key": "sectionId",
											"value": "40990660.07302156"
										},
										{
											"key": "limit",
											"value": "5"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				},
				{
					"name": "Get Search Results",
					"id": "5b97a1b4-13cd-4a6f-a762-3b6d529d85be",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/search?query=110",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"search"
							],
							"query": [
								{
									"key": "query",
									"value": "110",
									"description": "(Required) The search query string to use"
								}
							],
							"variable": [
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "This will search the database for the string provided."
					},
					"response": [
						{
							"id": "db942189-58be-4921-8e30-1888c823d941",
							"name": "Search Results",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/search?query=110",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "110"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"MediaContainer\": {\n\t\t\"size\": 26,\n\t\t\"identifier\": \"com.plexapp.plugins.library\",\n\t\t\"mediaTagPrefix\": \"/system/bundle/media/flags/\",\n\t\t\"mediaTagVersion\": 1680021154,\n\t\t\"Metadata\": [\n\t\t\t{\n\t\t\t\t\"allowSync\": false,\n\t\t\t\t\"librarySectionID\": 1,\n\t\t\t\t\"librarySectionTitle\": \"Movies\",\n\t\t\t\t\"librarySectionUUID\": \"322a231a-b7f7-49f5-920f-14c61199cd30\",\n\t\t\t\t\"personal\": true,\n\t\t\t\t\"sourceTitle\": \"Hera\",\n\t\t\t\t\"ratingKey\": 10398,\n\t\t\t\t\"key\": \"/library/metadata/10398\",\n\t\t\t\t\"guid\": \"plex://movie/5d7768284de0ee001fcc8f52\",\n\t\t\t\t\"studio\": \"Paramount\",\n\t\t\t\t\"type\": \"movie\",\n\t\t\t\t\"title\": \"Mission: Impossible\",\n\t\t\t\t\"contentRating\": \"PG-13\",\n\t\t\t\t\"summary\": \"When Ethan Hunt the leader of a crack espionage team whose perilous operation has gone awry with no explanation discovers that a mole has penetrated the CIA he's surprised to learn that he's the No. 1 suspect. To clear his name Hunt now must ferret out the real double agent and in the process even the score.\",\n\t\t\t\t\"rating\": 6.6,\n\t\t\t\t\"audienceRating\": 7.1,\n\t\t\t\t\"year\": 1996,\n\t\t\t\t\"tagline\": \"Expect the impossible.\",\n\t\t\t\t\"thumb\": \"/library/metadata/10398/thumb/1679505055\",\n\t\t\t\t\"art\": \"/library/metadata/10398/art/1679505055\",\n\t\t\t\t\"duration\": 6612628,\n\t\t\t\t\"originallyAvailableAt\": \"1996-11-14\",\n\t\t\t\t\"addedAt\": 1589234571,\n\t\t\t\t\"updatedAt\": 1679505055,\n\t\t\t\t\"audienceRatingImage\": \"rottentomatoes://image.rating.upright\",\n\t\t\t\t\"chapterSource\": \"media\",\n\t\t\t\t\"primaryExtraKey\": \"/library/metadata/10501\",\n\t\t\t\t\"ratingImage\": \"rottentomatoes://image.rating.ripe\",\n\t\t\t\t\"Media\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"id\": 26610,\n\t\t\t\t\t\t\"duration\": 6612628,\n\t\t\t\t\t\t\"bitrate\": 4751,\n\t\t\t\t\t\t\"width\": 1916,\n\t\t\t\t\t\t\"height\": 796,\n\t\t\t\t\t\t\"aspectRatio\": 2.35,\n\t\t\t\t\t\t\"audioChannels\": 6,\n\t\t\t\t\t\t\"audioCodec\": \"aac\",\n\t\t\t\t\t\t\"videoCodec\": \"hevc\",\n\t\t\t\t\t\t\"videoResolution\": 1080,\n\t\t\t\t\t\t\"container\": \"mkv\",\n\t\t\t\t\t\t\"videoFrameRate\": \"24p\",\n\t\t\t\t\t\t\"audioProfile\": \"lc\",\n\t\t\t\t\t\t\"videoProfile\": \"main 10\",\n\t\t\t\t\t\t\"Part\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"id\": 26610,\n\t\t\t\t\t\t\t\t\"key\": \"/library/parts/26610/1589234571/file.mkv\",\n\t\t\t\t\t\t\t\t\"duration\": 6612628,\n\t\t\t\t\t\t\t\t\"file\": \"/movies/Mission Impossible (1996)/Mission Impossible (1996) Bluray-1080p.mkv\",\n\t\t\t\t\t\t\t\t\"size\": 3926903851,\n\t\t\t\t\t\t\t\t\"audioProfile\": \"lc\",\n\t\t\t\t\t\t\t\t\"container\": \"mkv\",\n\t\t\t\t\t\t\t\t\"videoProfile\": \"main 10\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"id\": 26610,\n\t\t\t\t\t\t\t\t\"key\": \"/library/parts/26610/1589234571/file.mkv\",\n\t\t\t\t\t\t\t\t\"duration\": 6612628,\n\t\t\t\t\t\t\t\t\"file\": \"/movies/Mission Impossible (1996)/Mission Impossible (1996) Bluray-1080p.mkv\",\n\t\t\t\t\t\t\t\t\"size\": 3926903851,\n\t\t\t\t\t\t\t\t\"audioProfile\": \"lc\",\n\t\t\t\t\t\t\t\t\"container\": \"mkv\",\n\t\t\t\t\t\t\t\t\"videoProfile\": \"main 10\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"id\": 26610,\n\t\t\t\t\t\t\"duration\": 6612628,\n\t\t\t\t\t\t\"bitrate\": 4751,\n\t\t\t\t\t\t\"width\": 1916,\n\t\t\t\t\t\t\"height\": 796,\n\t\t\t\t\t\t\"aspectRatio\": 2.35,\n\t\t\t\t\t\t\"audioChannels\": 6,\n\t\t\t\t\t\t\"audioCodec\": \"aac\",\n\t\t\t\t\t\t\"videoCodec\": \"hevc\",\n\t\t\t\t\t\t\"videoResolution\": 1080,\n\t\t\t\t\t\t\"container\": \"mkv\",\n\t\t\t\t\t\t\"videoFrameRate\": \"24p\",\n\t\t\t\t\t\t\"audioProfile\": \"lc\",\n\t\t\t\t\t\t\"videoProfile\": \"main 10\",\n\t\t\t\t\t\t\"Part\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"id\": 26610,\n\t\t\t\t\t\t\t\t\"key\": \"/library/parts/26610/1589234571/file.mkv\",\n\t\t\t\t\t\t\t\t\"duration\": 6612628,\n\t\t\t\t\t\t\t\t\"file\": \"/movies/Mission Impossible (1996)/Mission Impossible (1996) Bluray-1080p.mkv\",\n\t\t\t\t\t\t\t\t\"size\": 3926903851,\n\t\t\t\t\t\t\t\t\"audioProfile\": \"lc\",\n\t\t\t\t\t\t\t\t\"container\": \"mkv\",\n\t\t\t\t\t\t\t\t\"videoProfile\": \"main 10\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"id\": 26610,\n\t\t\t\t\t\t\t\t\"key\": \"/library/parts/26610/1589234571/file.mkv\",\n\t\t\t\t\t\t\t\t\"duration\": 6612628,\n\t\t\t\t\t\t\t\t\"file\": \"/movies/Mission Impossible (1996)/Mission Impossible (1996) Bluray-1080p.mkv\",\n\t\t\t\t\t\t\t\t\"size\": 3926903851,\n\t\t\t\t\t\t\t\t\"audioProfile\": \"lc\",\n\t\t\t\t\t\t\t\t\"container\": \"mkv\",\n\t\t\t\t\t\t\t\t\"videoProfile\": \"main 10\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"Genre\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"tag\": \"Action\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"tag\": \"Action\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"Director\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"tag\": \"Brian De Palma\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"tag\": \"Brian De Palma\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"Writer\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"tag\": \"David Koepp\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"tag\": \"David Koepp\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"Country\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"tag\": \"United States of America\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"tag\": \"United States of America\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"Role\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"tag\": \"Tom Cruise\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"tag\": \"Tom Cruise\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"allowSync\": true,\n\t\t\t\t\"librarySectionID\": 1,\n\t\t\t\t\"librarySectionTitle\": \"Movies\",\n\t\t\t\t\"librarySectionUUID\": \"322a231a-b7f7-49f5-920f-14c61199cd30\",\n\t\t\t\t\"personal\": false,\n\t\t\t\t\"sourceTitle\": \"Hera\",\n\t\t\t\t\"ratingKey\": 10398,\n\t\t\t\t\"key\": \"/library/metadata/10398\",\n\t\t\t\t\"guid\": \"plex://movie/5d7768284de0ee001fcc8f52\",\n\t\t\t\t\"studio\": \"Paramount\",\n\t\t\t\t\"type\": \"movie\",\n\t\t\t\t\"title\": \"Mission: Impossible\",\n\t\t\t\t\"contentRating\": \"PG-13\",\n\t\t\t\t\"summary\": \"When Ethan Hunt the leader of a crack espionage team whose perilous operation has gone awry with no explanation discovers that a mole has penetrated the CIA he's surprised to learn that he's the No. 1 suspect. To clear his name Hunt now must ferret out the real double agent and in the process even the score.\",\n\t\t\t\t\"rating\": 6.6,\n\t\t\t\t\"audienceRating\": 7.1,\n\t\t\t\t\"year\": 1996,\n\t\t\t\t\"tagline\": \"Expect the impossible.\",\n\t\t\t\t\"thumb\": \"/library/metadata/10398/thumb/1679505055\",\n\t\t\t\t\"art\": \"/library/metadata/10398/art/1679505055\",\n\t\t\t\t\"duration\": 6612628,\n\t\t\t\t\"originallyAvailableAt\": \"1950-06-18\",\n\t\t\t\t\"addedAt\": 1589234571,\n\t\t\t\t\"updatedAt\": 1679505055,\n\t\t\t\t\"audienceRatingImage\": \"rottentomatoes://image.rating.upright\",\n\t\t\t\t\"chapterSource\": \"media\",\n\t\t\t\t\"primaryExtraKey\": \"/library/metadata/10501\",\n\t\t\t\t\"ratingImage\": \"rottentomatoes://image.rating.ripe\",\n\t\t\t\t\"Media\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"id\": 26610,\n\t\t\t\t\t\t\"duration\": 6612628,\n\t\t\t\t\t\t\"bitrate\": 4751,\n\t\t\t\t\t\t\"width\": 1916,\n\t\t\t\t\t\t\"height\": 796,\n\t\t\t\t\t\t\"aspectRatio\": 2.35,\n\t\t\t\t\t\t\"audioChannels\": 6,\n\t\t\t\t\t\t\"audioCodec\": \"aac\",\n\t\t\t\t\t\t\"videoCodec\": \"hevc\",\n\t\t\t\t\t\t\"videoResolution\": 1080,\n\t\t\t\t\t\t\"container\": \"mkv\",\n\t\t\t\t\t\t\"videoFrameRate\": \"24p\",\n\t\t\t\t\t\t\"audioProfile\": \"lc\",\n\t\t\t\t\t\t\"videoProfile\": \"main 10\",\n\t\t\t\t\t\t\"Part\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"id\": 26610,\n\t\t\t\t\t\t\t\t\"key\": \"/library/parts/26610/1589234571/file.mkv\",\n\t\t\t\t\t\t\t\t\"duration\": 6612628,\n\t\t\t\t\t\t\t\t\"file\": \"/movies/Mission Impossible (1996)/Mission Impossible (1996) Bluray-1080p.mkv\",\n\t\t\t\t\t\t\t\t\"size\": 3926903851,\n\t\t\t\t\t\t\t\t\"audioProfile\": \"lc\",\n\t\t\t\t\t\t\t\t\"container\": \"mkv\",\n\t\t\t\t\t\t\t\t\"videoProfile\": \"main 10\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"id\": 26610,\n\t\t\t\t\t\t\t\t\"key\": \"/library/parts/26610/1589234571/file.mkv\",\n\t\t\t\t\t\t\t\t\"duration\": 6612628,\n\t\t\t\t\t\t\t\t\"file\": \"/movies/Mission Impossible (1996)/Mission Impossible (1996) Bluray-1080p.mkv\",\n\t\t\t\t\t\t\t\t\"size\": 3926903851,\n\t\t\t\t\t\t\t\t\"audioProfile\": \"lc\",\n\t\t\t\t\t\t\t\t\"container\": \"mkv\",\n\t\t\t\t\t\t\t\t\"videoProfile\": \"main 10\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"id\": 26610,\n\t\t\t\t\t\t\"duration\": 6612628,\n\t\t\t\t\t\t\"bitrate\": 4751,\n\t\t\t\t\t\t\"width\": 1916,\n\t\t\t\t\t\t\"height\": 796,\n\t\t\t\t\t\t\"aspectRatio\": 2.35,\n\t\t\t\t\t\t\"audioChannels\": 6,\n\t\t\t\t\t\t\"audioCodec\": \"aac\",\n\t\t\t\t\t\t\"videoCodec\": \"hevc\",\n\t\t\t\t\t\t\"videoResolution\": 1080,\n\t\t\t\t\t\t\"container\": \"mkv\",\n\t\t\t\t\t\t\"videoFrameRate\": \"24p\",\n\t\t\t\t\t\t\"audioProfile\": \"lc\",\n\t\t\t\t\t\t\"videoProfile\": \"main 10\",\n\t\t\t\t\t\t\"Part\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"id\": 26610,\n\t\t\t\t\t\t\t\t\"key\": \"/library/parts/26610/1589234571/file.mkv\",\n\t\t\t\t\t\t\t\t\"duration\": 6612628,\n\t\t\t\t\t\t\t\t\"file\": \"/movies/Mission Impossible (1996)/Mission Impossible (1996) Bluray-1080p.mkv\",\n\t\t\t\t\t\t\t\t\"size\": 3926903851,\n\t\t\t\t\t\t\t\t\"audioProfile\": \"lc\",\n\t\t\t\t\t\t\t\t\"container\": \"mkv\",\n\t\t\t\t\t\t\t\t\"videoProfile\": \"main 10\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"id\": 26610,\n\t\t\t\t\t\t\t\t\"key\": \"/library/parts/26610/1589234571/file.mkv\",\n\t\t\t\t\t\t\t\t\"duration\": 6612628,\n\t\t\t\t\t\t\t\t\"file\": \"/movies/Mission Impossible (1996)/Mission Impossible (1996) Bluray-1080p.mkv\",\n\t\t\t\t\t\t\t\t\"size\": 3926903851,\n\t\t\t\t\t\t\t\t\"audioProfile\": \"lc\",\n\t\t\t\t\t\t\t\t\"container\": \"mkv\",\n\t\t\t\t\t\t\t\t\"videoProfile\": \"main 10\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"Genre\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"tag\": \"Action\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"tag\": \"Action\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"Director\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"tag\": \"Brian De Palma\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"tag\": \"Brian De Palma\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"Writer\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"tag\": \"David Koepp\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"tag\": \"David Koepp\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"Country\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"tag\": \"United States of America\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"tag\": \"United States of America\"\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"Role\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"tag\": \"Tom Cruise\"\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"tag\": \"Tom Cruise\"\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\t\"Provider\": [\n\t\t\t{\n\t\t\t\t\"key\": \"/system/search\",\n\t\t\t\t\"title\": \"Local Network\",\n\t\t\t\t\"type\": \"mixed\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"key\": \"/system/search\",\n\t\t\t\t\"title\": \"Local Network\",\n\t\t\t\t\"type\": \"mixed\"\n\t\t\t}\n\t\t]\n\t}\n}"
						},
						{
							"id": "d1f84ada-7aa7-4d4c-9b4f-51d18b1b88be",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/search?query=110",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "110"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "cc51341d-b404-427a-b389-a484355d4c0b",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/search?query=110",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search"
									],
									"query": [
										{
											"key": "query",
											"value": "110"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				}
			],
			"id": "27b20a9f-2446-4e38-9133-4849bfb1ae35",
			"description": "API Calls that perform search operations with Plex Media Server\n"
		},
		{
			"name": "Sessions",
			"item": [
				{
					"name": "Get Active Sessions",
					"id": "36e0bfca-4d27-4b94-8c9e-f26873a4fe94",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/status/sessions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"status",
								"sessions"
							],
							"variable": [
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "This will retrieve the \"Now Playing\" Information of the PMS."
					},
					"response": [
						{
							"id": "95143ee4-06e4-41cb-ad3e-b4ae25a79c59",
							"name": "List of Active Plex Sessions",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/status/sessions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"status",
										"sessions"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "f06f6805-dc38-4961-bfef-683045a06c17",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/status/sessions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"status",
										"sessions"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "d3917d04-4116-47ba-addd-2a22dcc6adeb",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/status/sessions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"status",
										"sessions"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				},
				{
					"name": "Get Session History",
					"id": "18684c1c-90a6-4f17-a2bd-06b2208d866a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/status/sessions/history/all",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"status",
								"sessions",
								"history",
								"all"
							],
							"variable": [
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "This will Retrieve a listing of all history views."
					},
					"response": [
						{
							"id": "24e157c0-9f16-407e-b686-ea3cdadc5366",
							"name": "List of Plex Sessions",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/status/sessions/history/all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"status",
										"sessions",
										"history",
										"all"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "849ccfd2-08ce-4b15-8f10-2a4f0a4f71b2",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/status/sessions/history/all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"status",
										"sessions",
										"history",
										"all"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "b8b595b1-c8d8-4a05-a4b9-28a0a93ecfee",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/status/sessions/history/all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"status",
										"sessions",
										"history",
										"all"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				},
				{
					"name": "Get Transcode Sessions",
					"id": "21995021-2100-4610-9077-a8d3c49c9db4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/transcode/sessions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transcode",
								"sessions"
							],
							"variable": [
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "Get Transcode Sessions"
					},
					"response": [
						{
							"id": "2e52ab0b-3066-4492-b7d8-7b1a102bded7",
							"name": "The Transcode Sessions",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transcode/sessions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transcode",
										"sessions"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"MediaContainer\": {\n\t\t\"size\": 1,\n\t\t\"TranscodeSession\": [\n\t\t\t{\n\t\t\t\t\"key\": \"zz7llzqlx8w9vnrsbnwhbmep\",\n\t\t\t\t\"throttled\": true,\n\t\t\t\t\"complete\": true,\n\t\t\t\t\"progress\": 0.4000000059604645,\n\t\t\t\t\"size\": -22,\n\t\t\t\t\"speed\": 22.399999618530273,\n\t\t\t\t\"error\": true,\n\t\t\t\t\"duration\": 2561768,\n\t\t\t\t\"context\": \"streaming\",\n\t\t\t\t\"sourceVideoCodec\": \"h264\",\n\t\t\t\t\"sourceAudioCodec\": \"ac3\",\n\t\t\t\t\"videoDecision\": \"transcode\",\n\t\t\t\t\"audioDecision\": \"transcode\",\n\t\t\t\t\"protocol\": \"http\",\n\t\t\t\t\"container\": \"mkv\",\n\t\t\t\t\"videoCodec\": \"h264\",\n\t\t\t\t\"audioCodec\": \"opus\",\n\t\t\t\t\"audioChannels\": 2,\n\t\t\t\t\"transcodeHwRequested\": false,\n\t\t\t\t\"timeStamp\": 1681869535.7764285,\n\t\t\t\t\"maxOffsetAvailable\": 861.778,\n\t\t\t\t\"minOffsetAvailable\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"key\": \"zz7llzqlx8w9vnrsbnwhbmep\",\n\t\t\t\t\"throttled\": false,\n\t\t\t\t\"complete\": false,\n\t\t\t\t\"progress\": 0.4000000059604645,\n\t\t\t\t\"size\": -22,\n\t\t\t\t\"speed\": 22.399999618530273,\n\t\t\t\t\"error\": true,\n\t\t\t\t\"duration\": 2561768,\n\t\t\t\t\"context\": \"streaming\",\n\t\t\t\t\"sourceVideoCodec\": \"h264\",\n\t\t\t\t\"sourceAudioCodec\": \"ac3\",\n\t\t\t\t\"videoDecision\": \"transcode\",\n\t\t\t\t\"audioDecision\": \"transcode\",\n\t\t\t\t\"protocol\": \"http\",\n\t\t\t\t\"container\": \"mkv\",\n\t\t\t\t\"videoCodec\": \"h264\",\n\t\t\t\t\"audioCodec\": \"opus\",\n\t\t\t\t\"audioChannels\": 2,\n\t\t\t\t\"transcodeHwRequested\": true,\n\t\t\t\t\"timeStamp\": 1681869535.7764285,\n\t\t\t\t\"maxOffsetAvailable\": 861.778,\n\t\t\t\t\"minOffsetAvailable\": 0\n\t\t\t}\n\t\t]\n\t}\n}"
						},
						{
							"id": "2c8406ce-8501-481a-a867-280dc3a44522",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transcode/sessions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transcode",
										"sessions"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "dc08ee20-6a99-4749-b46a-0b875816c18d",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transcode/sessions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transcode",
										"sessions"
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				},
				{
					"name": "Stop a Transcode Session",
					"id": "ee237e47-77b6-4a77-a21c-7bd1034b8d31",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/transcode/sessions/:sessionKey",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"transcode",
								"sessions",
								":sessionKey"
							],
							"variable": [
								{
									"key": "sessionKey",
									"value": "zz7llzqlx8w9vnrsbnwhbmep",
									"description": "(Required) the Key of the transcode session to stop"
								},
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "Stop a Transcode Session"
					},
					"response": [
						{
							"id": "ec1bc008-4913-418c-8dcc-ba71bdb93cae",
							"name": "The Transcode Session ended",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transcode/sessions/:sessionKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transcode",
										"sessions",
										":sessionKey"
									],
									"variable": [
										{
											"key": "sessionKey",
											"value": "zz7llzqlx8w9vnrsbnwhbmep",
											"description": "(Required) the Key of the transcode session to stop"
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "50ec63a7-c5ae-45a8-a609-531877608da9",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transcode/sessions/:sessionKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transcode",
										"sessions",
										":sessionKey"
									],
									"variable": [
										{
											"key": "sessionKey",
											"value": "zz7llzqlx8w9vnrsbnwhbmep",
											"description": "(Required) the Key of the transcode session to stop"
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "ac02c9dc-3260-4319-a63e-e86923ed53a7",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/transcode/sessions/:sessionKey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"transcode",
										"sessions",
										":sessionKey"
									],
									"variable": [
										{
											"key": "sessionKey",
											"value": "zz7llzqlx8w9vnrsbnwhbmep",
											"description": "(Required) the Key of the transcode session to stop"
										},
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				}
			],
			"id": "63f45270-3170-4b89-ae6a-91ffc1ddcac6",
			"description": "API Calls that perform search operations with Plex Media Server Sessions\n"
		},
		{
			"name": "User",
			"item": [],
			"id": "968abfc4-35df-4e9a-b48c-f2ebbc68dd43",
			"description": "API Calls that perform operations with Plex Media Server Users\n"
		},
		{
			"name": "Video",
			"item": [
				{
					"name": "Start Universal Transcode",
					"id": "f5031245-d72d-46ac-ba6e-0bfe0a1c4c75",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/video/:/transcode/universal/start.mpd?hasMDE=1&path=/library/metadata/23409&mediaIndex=0&partIndex=0&protocol=hls&fastSeek=0&directPlay=0&directStream=0&subtitleSize=100&subtites=burn&audioBoost=100&location=lan&mediaBufferSize=102400&session=zvcage8b7rkioqcm8f4uns4c&addDebugOverlay=0&autoAdjustQuality=0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"video",
								":",
								"transcode",
								"universal",
								"start.mpd"
							],
							"query": [
								{
									"key": "hasMDE",
									"value": "1",
									"description": "(Required) Whether the media item has MDE"
								},
								{
									"key": "path",
									"value": "/library/metadata/23409",
									"description": "(Required) The path to the media item to transcode"
								},
								{
									"key": "mediaIndex",
									"value": "0",
									"description": "(Required) The index of the media item to transcode"
								},
								{
									"key": "partIndex",
									"value": "0",
									"description": "(Required) The index of the part to transcode"
								},
								{
									"key": "protocol",
									"value": "hls",
									"description": "(Required) The protocol to use for the transcode session"
								},
								{
									"key": "fastSeek",
									"value": "0",
									"description": "Whether to use fast seek or not"
								},
								{
									"key": "directPlay",
									"value": "0",
									"description": "Whether to use direct play or not"
								},
								{
									"key": "directStream",
									"value": "0",
									"description": "Whether to use direct stream or not"
								},
								{
									"key": "subtitleSize",
									"value": "100",
									"description": "The size of the subtitles"
								},
								{
									"key": "subtites",
									"value": "burn",
									"description": "The subtitles"
								},
								{
									"key": "audioBoost",
									"value": "100",
									"description": "The audio boost"
								},
								{
									"key": "location",
									"value": "lan",
									"description": "The location of the transcode session"
								},
								{
									"key": "mediaBufferSize",
									"value": "102400",
									"description": "The size of the media buffer"
								},
								{
									"key": "session",
									"value": "zvcage8b7rkioqcm8f4uns4c",
									"description": "The session ID"
								},
								{
									"key": "addDebugOverlay",
									"value": "0",
									"description": "Whether to add a debug overlay or not"
								},
								{
									"key": "autoAdjustQuality",
									"value": "0",
									"description": "Whether to auto adjust quality or not"
								}
							],
							"variable": [
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "Begin a Universal Transcode Session"
					},
					"response": [
						{
							"id": "a7caf516-4538-468c-820f-3a1c2a7bdb46",
							"name": "The transcode session has started",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/video/:/transcode/universal/start.mpd?hasMDE=1&path=/library/metadata/23409&mediaIndex=0&partIndex=0&protocol=hls&fastSeek=0&directPlay=0&directStream=0&subtitleSize=100&subtites=burn&audioBoost=100&location=lan&mediaBufferSize=102400&session=zvcage8b7rkioqcm8f4uns4c&addDebugOverlay=0&autoAdjustQuality=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"video",
										":",
										"transcode",
										"universal",
										"start.mpd"
									],
									"query": [
										{
											"key": "hasMDE",
											"value": "1"
										},
										{
											"key": "path",
											"value": "/library/metadata/23409"
										},
										{
											"key": "mediaIndex",
											"value": "0"
										},
										{
											"key": "partIndex",
											"value": "0"
										},
										{
											"key": "protocol",
											"value": "hls"
										},
										{
											"key": "fastSeek",
											"value": "0"
										},
										{
											"key": "directPlay",
											"value": "0"
										},
										{
											"key": "directStream",
											"value": "0"
										},
										{
											"key": "subtitleSize",
											"value": "100"
										},
										{
											"key": "subtites",
											"value": "burn"
										},
										{
											"key": "audioBoost",
											"value": "100"
										},
										{
											"key": "location",
											"value": "lan"
										},
										{
											"key": "mediaBufferSize",
											"value": "102400"
										},
										{
											"key": "session",
											"value": "zvcage8b7rkioqcm8f4uns4c"
										},
										{
											"key": "addDebugOverlay",
											"value": "0"
										},
										{
											"key": "autoAdjustQuality",
											"value": "0"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "ede5247b-c34f-4bdf-aaee-417df1a6ef9d",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/video/:/transcode/universal/start.mpd?hasMDE=1&path=/library/metadata/23409&mediaIndex=0&partIndex=0&protocol=hls&fastSeek=0&directPlay=0&directStream=0&subtitleSize=100&subtites=burn&audioBoost=100&location=lan&mediaBufferSize=102400&session=zvcage8b7rkioqcm8f4uns4c&addDebugOverlay=0&autoAdjustQuality=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"video",
										":",
										"transcode",
										"universal",
										"start.mpd"
									],
									"query": [
										{
											"key": "hasMDE",
											"value": "1"
										},
										{
											"key": "path",
											"value": "/library/metadata/23409"
										},
										{
											"key": "mediaIndex",
											"value": "0"
										},
										{
											"key": "partIndex",
											"value": "0"
										},
										{
											"key": "protocol",
											"value": "hls"
										},
										{
											"key": "fastSeek",
											"value": "0"
										},
										{
											"key": "directPlay",
											"value": "0"
										},
										{
											"key": "directStream",
											"value": "0"
										},
										{
											"key": "subtitleSize",
											"value": "100"
										},
										{
											"key": "subtites",
											"value": "burn"
										},
										{
											"key": "audioBoost",
											"value": "100"
										},
										{
											"key": "location",
											"value": "lan"
										},
										{
											"key": "mediaBufferSize",
											"value": "102400"
										},
										{
											"key": "session",
											"value": "zvcage8b7rkioqcm8f4uns4c"
										},
										{
											"key": "addDebugOverlay",
											"value": "0"
										},
										{
											"key": "autoAdjustQuality",
											"value": "0"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "30419004-0279-4f83-8903-41cfb423cb85",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/video/:/transcode/universal/start.mpd?hasMDE=1&path=/library/metadata/23409&mediaIndex=0&partIndex=0&protocol=hls&fastSeek=0&directPlay=0&directStream=0&subtitleSize=100&subtites=burn&audioBoost=100&location=lan&mediaBufferSize=102400&session=zvcage8b7rkioqcm8f4uns4c&addDebugOverlay=0&autoAdjustQuality=0",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"video",
										":",
										"transcode",
										"universal",
										"start.mpd"
									],
									"query": [
										{
											"key": "hasMDE",
											"value": "1"
										},
										{
											"key": "path",
											"value": "/library/metadata/23409"
										},
										{
											"key": "mediaIndex",
											"value": "0"
										},
										{
											"key": "partIndex",
											"value": "0"
										},
										{
											"key": "protocol",
											"value": "hls"
										},
										{
											"key": "fastSeek",
											"value": "0"
										},
										{
											"key": "directPlay",
											"value": "0"
										},
										{
											"key": "directStream",
											"value": "0"
										},
										{
											"key": "subtitleSize",
											"value": "100"
										},
										{
											"key": "subtites",
											"value": "burn"
										},
										{
											"key": "audioBoost",
											"value": "100"
										},
										{
											"key": "location",
											"value": "lan"
										},
										{
											"key": "mediaBufferSize",
											"value": "102400"
										},
										{
											"key": "session",
											"value": "zvcage8b7rkioqcm8f4uns4c"
										},
										{
											"key": "addDebugOverlay",
											"value": "0"
										},
										{
											"key": "autoAdjustQuality",
											"value": "0"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				},
				{
					"name": "Get the timeline for a media item",
					"id": "d1b0e8eb-7663-408a-a9fb-df936ba55817",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/:/timeline?ratingKey=23409&key=/library/metadata/23409&state=playing&hasMDE=1&time=2000&duration=10000&context=home:hub.continueWatching&playQueueItemID=1&playBackTime=2000&row=1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								":",
								"timeline"
							],
							"query": [
								{
									"key": "ratingKey",
									"value": "23409",
									"description": "(Required) The rating key of the media item"
								},
								{
									"key": "key",
									"value": "/library/metadata/23409",
									"description": "(Required) The key of the media item to get the timeline for"
								},
								{
									"key": "state",
									"value": "playing",
									"description": "(Required) The state of the media item"
								},
								{
									"key": "hasMDE",
									"value": "1",
									"description": "(Required) Whether the media item has MDE"
								},
								{
									"key": "time",
									"value": "2000",
									"description": "(Required) The time of the media item"
								},
								{
									"key": "duration",
									"value": "10000",
									"description": "(Required) The duration of the media item"
								},
								{
									"key": "context",
									"value": "home:hub.continueWatching",
									"description": "(Required) The context of the media item"
								},
								{
									"key": "playQueueItemID",
									"value": "1",
									"description": "(Required) The play queue item ID of the media item"
								},
								{
									"key": "playBackTime",
									"value": "2000",
									"description": "(Required) The playback time of the media item"
								},
								{
									"key": "row",
									"value": "1",
									"description": "(Required) The row of the media item"
								}
							],
							"variable": [
								{
									"key": "protocol",
									"value": "{{protocol}}",
									"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
								},
								{
									"key": "ip",
									"value": "{{ip}}",
									"description": "The Local IP Address of your plex server."
								},
								{
									"key": "port",
									"value": "{{port}}",
									"description": "The port to access your plex server."
								}
							]
						},
						"description": "Get the timeline for a media item"
					},
					"response": [
						{
							"id": "233135a8-3bc4-495d-b562-2b07cc436e5a",
							"name": "The timeline for the media item",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/:/timeline?ratingKey=23409&key=/library/metadata/23409&state=playing&hasMDE=1&time=2000&duration=10000&context=home:hub.continueWatching&playQueueItemID=1&playBackTime=2000&row=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										":",
										"timeline"
									],
									"query": [
										{
											"key": "ratingKey",
											"value": "23409"
										},
										{
											"key": "key",
											"value": "/library/metadata/23409"
										},
										{
											"key": "state",
											"value": "playing"
										},
										{
											"key": "hasMDE",
											"value": "1"
										},
										{
											"key": "time",
											"value": "2000"
										},
										{
											"key": "duration",
											"value": "10000"
										},
										{
											"key": "context",
											"value": "home:hub.continueWatching"
										},
										{
											"key": "playQueueItemID",
											"value": "1"
										},
										{
											"key": "playBackTime",
											"value": "2000"
										},
										{
											"key": "row",
											"value": "1"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "5dbba995-c002-4c2b-b6ab-aa1456c9fd91",
							"name": "Bad Request - A parameter was not specified, or was specified incorrectly.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/:/timeline?ratingKey=23409&key=/library/metadata/23409&state=playing&hasMDE=1&time=2000&duration=10000&context=home:hub.continueWatching&playQueueItemID=1&playBackTime=2000&row=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										":",
										"timeline"
									],
									"query": [
										{
											"key": "ratingKey",
											"value": "23409"
										},
										{
											"key": "key",
											"value": "/library/metadata/23409"
										},
										{
											"key": "state",
											"value": "playing"
										},
										{
											"key": "hasMDE",
											"value": "1"
										},
										{
											"key": "time",
											"value": "2000"
										},
										{
											"key": "duration",
											"value": "10000"
										},
										{
											"key": "context",
											"value": "home:hub.continueWatching"
										},
										{
											"key": "playQueueItemID",
											"value": "1"
										},
										{
											"key": "playBackTime",
											"value": "2000"
										},
										{
											"key": "row",
											"value": "1"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "beec7b2f-aa8c-40ce-8ecd-e056eca70042",
							"name": "Unauthorized - Returned if the X-Plex-Token is missing from the header or query.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "X-Plex-Token",
										"value": "<API Key>"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/:/timeline?ratingKey=23409&key=/library/metadata/23409&state=playing&hasMDE=1&time=2000&duration=10000&context=home:hub.continueWatching&playQueueItemID=1&playBackTime=2000&row=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										":",
										"timeline"
									],
									"query": [
										{
											"key": "ratingKey",
											"value": "23409"
										},
										{
											"key": "key",
											"value": "/library/metadata/23409"
										},
										{
											"key": "state",
											"value": "playing"
										},
										{
											"key": "hasMDE",
											"value": "1"
										},
										{
											"key": "time",
											"value": "2000"
										},
										{
											"key": "duration",
											"value": "10000"
										},
										{
											"key": "context",
											"value": "home:hub.continueWatching"
										},
										{
											"key": "playQueueItemID",
											"value": "1"
										},
										{
											"key": "playBackTime",
											"value": "2000"
										},
										{
											"key": "row",
											"value": "1"
										}
									],
									"variable": [
										{
											"key": "protocol",
											"value": "{{protocol}}",
											"description": "The protocol to use when connecting to your plex server. (This can only be one of http,https)"
										},
										{
											"key": "ip",
											"value": "{{ip}}",
											"description": "The Local IP Address of your plex server."
										},
										{
											"key": "port",
											"value": "{{port}}",
											"description": "The port to access your plex server."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"errors\": [\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t},\n\t\t{\n\t\t\t\"code\": 1001,\n\t\t\t\"message\": \"User could not be authenticated\",\n\t\t\t\"status\": 401\n\t\t}\n\t]\n}"
						}
					]
				}
			],
			"id": "824dfd3b-6be5-4fe2-b2aa-057fac165d90"
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "X-Plex-Token",
				"type": "string"
			},
			{
				"key": "value",
				"value": "{{apiKey}}",
				"type": "string"
			},
			{
				"key": "in",
				"value": "header",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "7f48f280-2abe-4300-b1e1-00f1a945cff1",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "09fb4a6f-cef2-4764-b309-06a591f2c4ac",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "52badce0-8bc5-4077-91a1-459c8c96b7ab",
			"key": "protocol",
			"value": "http",
			"type": "any"
		},
		{
			"id": "afd079b5-f6cb-48e6-bc96-6ba717184f50",
			"key": "ip",
			"value": "10.10.10.47",
			"type": "any"
		},
		{
			"id": "0f18b532-1e41-48a1-970e-ac18438c5eea",
			"key": "port",
			"value": "32400",
			"type": "any"
		},
		{
			"id": "4196335a-c406-4599-93d3-2b0d213f3908",
			"key": "baseUrl",
			"value": "{{protocol}}://{{ip}}:{{port}}",
			"type": "string"
		}
	]
}